using System;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class AuthorMenu : MonoBehaviour
{
    public static GUIStyle BackStyle, GreenStyle, RedStyle, LabelStyle, BlueStyle, OrangeStyle;
    public static bool[] Rmod = new bool[40];
    public static float Delay = 0, WidthSize, MenuWidth1, MenuWidth2, MenuWidth3, MenuWidth4, MenuHeight1, MenuHeight2, MenuHeight3, MenuHeight4, MenuBtnHeight, RSliderValue;
    public static bool MenuOpen = false, ifDragged = false;
    public static Rect rect = new Rect(40f, 40f, 100f, 100f);
    public static Texture2D Image = null, FGreenTexture, FGreenPressTexture, FRedTexture, FRedPressTexture, FBackTexture, FBlueTexture, FBluePressTexture, FOrangeTexture, FOrangePressTexture;
    public static Texture2D NewTexture2D { get { return new Texture2D(1, 1); } }
    public static int FontSize, AutoY;

    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public void OnGUI()
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void OnGUI()
    public  void OnGUI()
    {
      
        if (Image == null)
        {
            Start();
        }
      
        rect = GUI.Window(0, rect, new GUI.WindowFunction(Logo), "", new GUIStyle());
        if (MenuOpen)
        {
            ModMenu();
        }
    }
    public static void FixScale()
    {
        if (Screen.width >= 1920)
        {
            AuthorMenu.FontSize = 28;
            AuthorMenu.WidthSize = 820f;
            AuthorMenu.MenuWidth1 = 6f;
            AuthorMenu.MenuWidth2 = 70f;
            AuthorMenu.MenuWidth3 = 6f;
            AuthorMenu.MenuWidth4 = 65f;
            AuthorMenu.MenuHeight1 = 58f;
            AuthorMenu.MenuHeight2 = MenuHeight1 + MenuWidth1;
            AuthorMenu.MenuHeight3 = MenuHeight2 + MenuWidth2;
            AuthorMenu.MenuHeight4 = MenuHeight3 + MenuWidth3;
            AuthorMenu.MenuBtnHeight = 80f;
        }
        if (Screen.width <= 1600 && Screen.width >= 1440)
        {
            AuthorMenu.FontSize = 22;
            AuthorMenu.WidthSize = 720f;
            AuthorMenu.MenuWidth1 = 5f;
            AuthorMenu.MenuWidth2 = 65f;
            AuthorMenu.MenuWidth3 = 5f;
            AuthorMenu.MenuWidth4 = 60f;
            AuthorMenu.MenuHeight1 = 48f;
        }
        if (Screen.width <= 1280)
        {
            AuthorMenu.FontSize = 30;
        }
    }
    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public void ModMenuGUI()
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void ModMenuGUI()
    public void ModMenu()
    {
        GUI.Box(new Rect(AuthorMenu.rect.x + 35f, AuthorMenu.rect.y + AuthorMenu.MenuHeight1, AuthorMenu.WidthSize, AuthorMenu.MenuWidth1), "", AuthorMenu.BlueStyle);
        GUI.Box(new Rect(AuthorMenu.rect.x + 35f, AuthorMenu.rect.y + AuthorMenu.MenuHeight2, AuthorMenu.WidthSize, AuthorMenu.MenuWidth2), "Modded by <color=cyan>RebelModz</color>\nwww.rebelmodzofficial.cf", AuthorMenu.BackStyle);
        GUI.Box(new Rect(AuthorMenu.rect.x + 35f, AuthorMenu.rect.y + AuthorMenu.MenuHeight3, AuthorMenu.WidthSize, AuthorMenu.MenuWidth3), "", AuthorMenu.BlueStyle);
        GUI.Box(new Rect(AuthorMenu.rect.x + 35f, AuthorMenu.rect.y + AuthorMenu.MenuHeight4, AuthorMenu.WidthSize, AuthorMenu.MenuWidth4 * AuthorMenu.AutoY), "", AuthorMenu.BackStyle);
 
        AuthorMenu.PositionGUI(1, 1, "Normal", "Test1");
        AuthorMenu.PositionGUI(2, 2, "Normal", "Test2");
        AuthorMenu.PositionGUI(3, 3, "Normal", "Test3");
        AuthorMenu.PositionGUI(4, 4, "Slider", "Test4");
        AuthorMenu.PositionGUI(5, 5, "Single", "Test5");
        AuthorMenu.PositionGUI(6, 6, "Normal", "Test6");
        AuthorMenu.PositionGUI(7, 7, "Yt", "Subscribe[Youtube]");
    }

    public static void PositionGUI(int Rindex, int Position, string Type, string Name)
    {
        if (Type == "Normal")
        {
            if (AuthorMenu.Rmod[Rindex])
            {
                if (GUI.Button(AuthorMenu.BtnRect(Position, false), Name + ": ON", AuthorMenu.GreenStyle))
                {
                    AuthorMenu.Rmod[Rindex] = false;
                }
            }
            else if (GUI.Button(AuthorMenu.BtnRect(Position, false), Name + ": OFF", AuthorMenu.BlueStyle))
            {
                AuthorMenu.Rmod[Rindex] = true;
            }
        }
        if (Type == "Single" && GUI.Button(AuthorMenu.BtnRect(Position, false), Name, AuthorMenu.BlueStyle))
        {
            AuthorMenu.Rmod[Rindex] = true;
        }
        if (Type == "Slider")
        {
            GUI.Label(new Rect(rect.x + 38f, rect.y + AuthorMenu.MenuBtnHeight + 65 * Rindex, AuthorMenu.WidthSize - 5, 59),Name + ": " + AuthorMenu.RSliderValue.ToString(), AuthorMenu.BlueStyle);
            RSliderValue = GUI.HorizontalSlider(new Rect(rect.x + 38f,rect.y + AuthorMenu.MenuBtnHeight + (float)(65 * Rindex), AuthorMenu.WidthSize - 4, 60f), RSliderValue, 0.0F, 10.0F);
            AuthorMenu.Rmod[Rindex] = true;
        }
        if (Type == "Yt" && GUI.Button(AuthorMenu.BtnRect(Position, false), Name, AuthorMenu.RedStyle))
        {
            Application.OpenURL("https://www.youtube.com/channel/UCczsQxaw_rcp8v0-d2PiPMg?sub_confirmation=1");
        }
    }
        /// Rect for buttons
        // It automatically auto position buttons. There is no need to change it
        public static Rect BtnRect(int y, bool multiplyBtn)
    {
        AutoY = y;
        if (Screen.width >= 1920)
        {
            return new Rect(rect.x + 38f, rect.y + AuthorMenu.MenuBtnHeight + 65 * y, AuthorMenu.WidthSize - 5, 59);
        }
        return new Rect(rect.x + 38f, rect.y + AuthorMenu.MenuBtnHeight + 65 * y, AuthorMenu.WidthSize - 5, 58);
    }
    public static void Start()
    {
        AuthorMenu.FixScale();
        AuthorMenu.Textures();
    }
    /// Load GUIStyle
    public static void Textures()
    {
        if (BackStyle == null)
        {
            BackStyle = new GUIStyle();
            BackStyle.normal.background = BackTexture;
            BackStyle.onNormal.background = BackTexture;
            BackStyle.active.background = BackTexture;
            BackStyle.onActive.background = BackTexture;
            BackStyle.normal.textColor = Color.white;
            BackStyle.onNormal.textColor = Color.white;
            BackStyle.active.textColor = Color.white;
            BackStyle.onActive.textColor = Color.white;
            BackStyle.fontSize = AuthorMenu.FontSize;
            BackStyle.fontStyle = FontStyle.Normal;
            BackStyle.alignment = TextAnchor.UpperCenter;
        }

        if (LabelStyle == null)
        {
            LabelStyle = new GUIStyle();
            LabelStyle.normal.textColor = Color.white;
            LabelStyle.onNormal.textColor = Color.white;
            LabelStyle.active.textColor = Color.white;
            LabelStyle.onActive.textColor = Color.white;
            LabelStyle.fontSize = AuthorMenu.FontSize;
            LabelStyle.fontStyle = FontStyle.Normal;
            LabelStyle.alignment = TextAnchor.UpperCenter;
        }

        if (RedStyle == null)
        {
            RedStyle = new GUIStyle();
            RedStyle.normal.background = RedTexture;
            RedStyle.onNormal.background = RedTexture;
            RedStyle.active.background = RedPressTexture;
            RedStyle.onActive.background = RedPressTexture;
            RedStyle.normal.textColor = Color.white;
            RedStyle.onNormal.textColor = Color.white;
            RedStyle.active.textColor = Color.white;
            RedStyle.onActive.textColor = Color.white;
            RedStyle.fontSize = AuthorMenu.FontSize;
            RedStyle.fontStyle = FontStyle.Normal;
            RedStyle.alignment = TextAnchor.MiddleCenter;
        }

        if (GreenStyle == null)
        {
            GreenStyle = new GUIStyle();
            GreenStyle.normal.background = GreenTexture;
            GreenStyle.onNormal.background = GreenTexture;
            GreenStyle.active.background = GreenPressTexture;
            GreenStyle.onActive.background = GreenPressTexture;
            GreenStyle.normal.textColor = Color.white;
            GreenStyle.onNormal.textColor = Color.white;
            GreenStyle.active.textColor = Color.white;
            GreenStyle.onActive.textColor = Color.white;
            GreenStyle.fontSize = AuthorMenu.FontSize;
            GreenStyle.fontStyle = FontStyle.Normal;
            GreenStyle.alignment = TextAnchor.MiddleCenter;
        }

        if (BlueStyle == null)
        {
            BlueStyle = new GUIStyle();
            BlueStyle.normal.background = BlueTexture;
            BlueStyle.onNormal.background = BlueTexture;
            BlueStyle.active.background = BluePressTexture;
            BlueStyle.onActive.background = BluePressTexture;
            BlueStyle.normal.textColor = Color.white;
            BlueStyle.onNormal.textColor = Color.white;
            BlueStyle.active.textColor = Color.white;
            BlueStyle.onActive.textColor = Color.white;
            BlueStyle.fontSize = AuthorMenu.FontSize;
            BlueStyle.fontStyle = FontStyle.Normal;
            BlueStyle.alignment = TextAnchor.MiddleCenter;
        }

        if (OrangeStyle == null)
        {
           OrangeStyle = new GUIStyle();
           OrangeStyle.normal.background = OrangeTexture;
           OrangeStyle.onNormal.background = OrangeTexture;
           OrangeStyle.active.background = OrangePressTexture;
           OrangeStyle.onActive.background = OrangePressTexture;
           OrangeStyle.normal.textColor = Color.white;
           OrangeStyle.onNormal.textColor = Color.white;
           OrangeStyle.active.textColor = Color.white;
           OrangeStyle.onActive.textColor = Color.white;
           OrangeStyle.fontSize = AuthorMenu.FontSize;
           OrangeStyle.fontStyle = FontStyle.Normal;
           OrangeStyle.alignment = TextAnchor.MiddleCenter;
        }
    }

    public static Texture2D OrangeTexture
    {
        get
        {
            if (FOrangeTexture == null)
            {
                FOrangeTexture = NewTexture2D;
                FOrangeTexture.SetPixel(0, 0, new Color32(byte.MaxValue, 87, 34, byte.MaxValue));
                FOrangeTexture.Apply();
            }
            return FOrangeTexture;
        }
    }

    public static Texture2D OrangePressTexture
    {
        get
        {
            if (FOrangePressTexture == null)
            {
                FOrangePressTexture = NewTexture2D;
                FOrangePressTexture.SetPixel(0, 0, new Color32(244, 81, 30, byte.MaxValue));
                FOrangePressTexture.Apply();
            }
            return FBluePressTexture;
        }
    }
    public static Texture2D BlueTexture
    {
        get
        {
            if (FBlueTexture == null)
            {
                FBlueTexture = NewTexture2D;
                FBlueTexture.SetPixel(0, 0, new Color32(3, 155, 229, 255));
                FBlueTexture.Apply();
            }
            return FBlueTexture;
        }
    }

    public static Texture2D BluePressTexture
    {
        get
        {
            if (FBluePressTexture == null)
            {
                FBluePressTexture = NewTexture2D;
                FBluePressTexture.SetPixel(0, 0, new Color32(2, 119, 189, 255));
                FBluePressTexture.Apply();
            }
            return FBluePressTexture;
        }
    }

    public static Texture2D GreenPressTexture
    {
        get
        {
            if (FGreenPressTexture == null)
            {
                FGreenPressTexture = NewTexture2D;
                FGreenPressTexture.SetPixel(0, 0, new Color32(56, 142, 60, 255));
                FGreenPressTexture.Apply();
            }
            return FGreenPressTexture;
        }
    }

    public static Texture2D GreenTexture
    {
        get
        {
            if (FGreenTexture == null)
            {
                FGreenTexture = NewTexture2D;
                FGreenTexture.SetPixel(0, 0, new Color32(76, 175, 80, 255));
                FGreenTexture.Apply();
            }
            return FGreenTexture;
        }
    }

    public static Texture2D RedPressTexture
    {
        get
        {
            if (FRedPressTexture == null)
            {
                FRedPressTexture = NewTexture2D;
                FRedPressTexture.SetPixel(0, 0, new Color32(211, 47, 47, 255));
                FRedPressTexture.Apply();
            }
            return FRedPressTexture;
        }
    }

    public static Texture2D RedTexture
    {
        get
        {
            if (FRedTexture == null)
            {
                FRedTexture = NewTexture2D;
                FRedTexture.SetPixel(0, 0, new Color32(244, 67, 54, 255));
                FRedTexture.Apply();
            }
            return FRedTexture;
        }
    }

    public static Texture2D BackTexture
    {
        get
        {
            if (FBackTexture == null)
            {
                FBackTexture = NewTexture2D;
                FBackTexture.SetPixel(0, 0, new Color32(42, 42, 42, 200));
                FBackTexture.Apply();
            }
            return FBackTexture;
        }
    }

    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public static void Logo(int windowID)
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void Logo(int windowID)
    public static void Logo(int windowID)
    {
 
        if (Image == null)
        {
            byte[] rawData = {
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x84,
    0x08, 0x04, 0x00, 0x00, 0x00, 0x13, 0xE1, 0x3C, 0x42, 0x00, 0x00, 0x00,
    0x04, 0x67, 0x41, 0x4D, 0x41, 0x00, 0x00, 0xB1, 0x8F, 0x0B, 0xFC, 0x61,
    0x05, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48, 0x52, 0x4D, 0x00, 0x00, 0x7A,
    0x26, 0x00, 0x00, 0x80, 0x84, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x80,
    0xE8, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xEA, 0x60, 0x00, 0x00, 0x3A,
    0x98, 0x00, 0x00, 0x17, 0x70, 0x9C, 0xBA, 0x51, 0x3C, 0x00, 0x00, 0x00,
    0x02, 0x62, 0x4B, 0x47, 0x44, 0x00, 0xFF, 0x87, 0x8F, 0xCC, 0xBF, 0x00,
    0x00, 0x1E, 0xF7, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xCD, 0x9D, 0x7B,
    0xB0, 0x65, 0x55, 0x9D, 0xDF, 0x3F, 0xFB, 0x75, 0xCE, 0xB9, 0xF7, 0x76,
    0x03, 0x71, 0xAC, 0x72, 0x40, 0x51, 0x71, 0x48, 0xC9, 0x90, 0x42, 0x63,
    0x8C, 0x85, 0x71, 0x62, 0x24, 0x19, 0xFF, 0x60, 0xD4, 0xB1, 0x34, 0x96,
    0xA2, 0xA0, 0x05, 0x93, 0x64, 0xB0, 0x28, 0x87, 0xD1, 0x4C, 0xD4, 0x8A,
    0x4E, 0xB0, 0x64, 0x9C, 0x68, 0x28, 0x1D, 0x99, 0x89, 0xE5, 0x0B, 0x19,
    0x86, 0x20, 0xEA, 0x48, 0x1C, 0x0D, 0xD8, 0x30, 0x18, 0x82, 0x3A, 0x8E,
    0x08, 0x82, 0x22, 0x2F, 0x45, 0x90, 0xE6, 0x29, 0x5C, 0x40, 0xE8, 0x6E,
    0xBA, 0xEF, 0xE3, 0x9C, 0xFD, 0xFA, 0xE6, 0x8F, 0xF5, 0x5B, 0x6B, 0xEF,
    0x73, 0xCE, 0x3E, 0x7D, 0x1F, 0xDD, 0xB7, 0xF1, 0xB7, 0xAB, 0xEF, 0xBD,
    0x7D, 0xCE, 0xD9, 0x7B, 0xAD, 0xDF, 0xFA, 0xBD, 0x1F, 0x6B, 0x9D, 0x88,
    0x43, 0x09, 0x71, 0x7A, 0x62, 0x79, 0x0C, 0xC7, 0xF2, 0x02, 0x9E, 0xCF,
    0x51, 0x3C, 0x93, 0xED, 0xA4, 0x94, 0xE9, 0xBE, 0xE8, 0x89, 0xE2, 0x91,
    0xE4, 0x7E, 0xDD, 0x5B, 0xDF, 0x13, 0xDD, 0xA7, 0x1B, 0xD0, 0x21, 0x9D,
    0xD3, 0xD6, 0xC2, 0x1C, 0x1C, 0x9B, 0x9C, 0xC6, 0xA5, 0x14, 0x68, 0x5E,
    0x91, 0x98, 0xB8, 0x52, 0x25, 0xE1, 0x67, 0xDF, 0xBF, 0x5A, 0x70, 0x29,
    0xA7, 0x71, 0xEC, 0xD3, 0x3D, 0xF7, 0x03, 0x82, 0xDE, 0x60, 0xEE, 0x14,
    0xAE, 0x41, 0x91, 0xE6, 0xD5, 0x53, 0xAA, 0xBE, 0x50, 0x3C, 0x85, 0x3E,
    0xEA, 0xA9, 0x2F, 0x94, 0x74, 0xBC, 0x83, 0xB8, 0x86, 0x53, 0xE8, 0x3D,
    0xDD, 0x98, 0x6C, 0x14, 0xFA, 0x9C, 0x39, 0x58, 0x44, 0x28, 0x53, 0xAC,
    0x41, 0x0B, 0x51, 0x14, 0x4D, 0x5C, 0x73, 0x42, 0xB1, 0x22, 0xA1, 0x4C,
    0x69, 0xF7, 0x12, 0x88, 0x45, 0xCE, 0xE4, 0x59, 0x4F, 0x37, 0x52, 0xEB,
    0x82, 0xF4, 0xD5, 0xD9, 0xF5, 0xB4, 0xD0, 0x49, 0x85, 0x22, 0x65, 0xBA,
    0x54, 0x4F, 0xE9, 0x71, 0xED, 0xD5, 0x13, 0x13, 0xD7, 0x43, 0xFA, 0xB7,
    0xCA, 0x14, 0x69, 0x61, 0x16, 0xEA, 0xCD, 0x75, 0x3D, 0xAF, 0x7E, 0xBA,
    0xB1, 0xDB, 0x1F, 0x1C, 0xCE, 0xD9, 0x8E, 0xE2, 0x68, 0xDE, 0x24, 0x79,
    0x20, 0xD4, 0xD3, 0xC5, 0x7A, 0x5C, 0x52, 0xAD, 0xA1, 0x86, 0x9A, 0x84,
    0x5A, 0xD2, 0x7F, 0x36, 0x2D, 0x10, 0xAB, 0xB7, 0xF6, 0x22, 0x9C, 0xCD,
    0xE1, 0x4F, 0x37, 0xA2, 0xD3, 0xF0, 0x0C, 0xCE, 0xF5, 0x13, 0x8C, 0x84,
    0x31, 0x75, 0xA4, 0xB7, 0xEB, 0x72, 0x2D, 0x1B, 0xD2, 0xCB, 0x86, 0xEE,
    0xF8, 0x25, 0x95, 0xAA, 0xF4, 0x4A, 0xA5, 0x26, 0x02, 0xEB, 0xBA, 0xCE,
    0xE5, 0x19, 0x4F, 0x37, 0xC2, 0x0D, 0x2C, 0xF0, 0xC1, 0x66, 0x6A, 0x91,
    0xD0, 0xBB, 0x74, 0xA1, 0xAE, 0xD5, 0x3D, 0xAA, 0x02, 0xB5, 0x73, 0xFB,
    0x6B, 0x9A, 0xFA, 0xEE, 0xB5, 0x65, 0xBD, 0x4E, 0xD9, 0x0C, 0xD5, 0x38,
    0xE3, 0xFA, 0x20, 0x0B, 0x07, 0x3E, 0xF5, 0xE8, 0xC0, 0x6E, 0x4F, 0xE3,
    0xF2, 0x2D, 0xD9, 0x57, 0x0A, 0xE6, 0x79, 0x1B, 0xAF, 0xE1, 0x58, 0xB6,
    0x71, 0x34, 0x11, 0x31, 0xB1, 0xBD, 0xAF, 0x35, 0x07, 0x10, 0x35, 0x09,
    0xB0, 0xCA, 0x5D, 0xDC, 0xC8, 0x5D, 0x1C, 0xC6, 0x6F, 0x72, 0x24, 0x87,
    0xB1, 0x9D, 0x79, 0x72, 0xF6, 0x72, 0x39, 0x9F, 0x66, 0x48, 0x6C, 0x9F,
    0xAA, 0x48, 0xA8, 0xE8, 0x53, 0x50, 0x13, 0x91, 0xBC, 0xAD, 0xBC, 0x8C,
    0x7A, 0xEB, 0xE9, 0x3B, 0x0B, 0xF9, 0xE3, 0xA3, 0x9D, 0x3D, 0x9D, 0xAD,
    0x1F, 0x6A, 0x49, 0x52, 0xAE, 0x15, 0x63, 0xE5, 0x71, 0xC9, 0x5E, 0x0B,
    0x2A, 0x15, 0xAD, 0x7B, 0x46, 0x63, 0xF7, 0xE4, 0x2A, 0xF4, 0x33, 0x25,
    0xEA, 0x29, 0x52, 0x6C, 0x7A, 0x25, 0x51, 0x2C, 0x34, 0xA7, 0x44, 0x28,
    0xDE, 0xC9, 0xF1, 0x4F, 0x0B, 0xEA, 0x51, 0xDC, 0x3F, 0x07, 0x9D, 0xA7,
    0x45, 0x55, 0xAA, 0x55, 0xAB, 0x92, 0xC6, 0xD0, 0x58, 0x3F, 0xFA, 0xEE,
    0x73, 0xB9, 0x86, 0x2A, 0xC3, 0x82, 0xD4, 0xAA, 0x55, 0xDA, 0xDD, 0x4B,
    0xBA, 0x52, 0x69, 0xF0, 0x0C, 0x06, 0xE6, 0x1C, 0xC5, 0x42, 0xDB, 0x9D,
    0x18, 0x9C, 0x43, 0x76, 0x88, 0x91, 0xDF, 0xF6, 0x42, 0x76, 0x9F, 0xA6,
    0x87, 0x02, 0xBA, 0xB5, 0x4A, 0x49, 0x85, 0x46, 0xEB, 0x44, 0xB7, 0x81,
    0x72, 0x62, 0xC9, 0x72, 0x0D, 0x55, 0xD8, 0x33, 0x2B, 0x49, 0x2B, 0x92,
    0x0A, 0x7D, 0xD9, 0xB4, 0x4A, 0x4F, 0x03, 0xA1, 0xBE, 0x12, 0xB3, 0x2A,
    0xA6, 0x2B, 0x76, 0xF3, 0xC2, 0x43, 0x86, 0xFA, 0x1C, 0xD1, 0xE9, 0x89,
    0xBE, 0xA5, 0x4A, 0x52, 0x65, 0x08, 0x94, 0x63, 0x28, 0x34, 0x5A, 0x7D,
    0x7D, 0x50, 0xD9, 0x22, 0xD4, 0xAD, 0xA5, 0x70, 0x1C, 0x55, 0xD9, 0xB3,
    0x0B, 0xDD, 0xAD, 0x97, 0x9B, 0x6A, 0x4D, 0xCC, 0x9B, 0x88, 0x95, 0x2A,
    0x6B, 0x54, 0xE1, 0x19, 0x87, 0x06, 0xFB, 0x41, 0x76, 0x09, 0xBA, 0x5F,
    0xB2, 0x69, 0xF9, 0x25, 0x90, 0x86, 0x2A, 0x55, 0x8E, 0x99, 0xB4, 0xF5,
    0x51, 0x7F, 0x7C, 0xE1, 0x0A, 0x55, 0xAA, 0x54, 0x04, 0x0E, 0x70, 0x50,
    0xA8, 0xD4, 0x48, 0x3F, 0xD5, 0x09, 0xC1, 0xBA, 0xF4, 0xEC, 0x77, 0xEB,
    0xBA, 0x84, 0xC1, 0x56, 0x23, 0x7F, 0x64, 0xFC, 0xE8, 0x9B, 0x55, 0xA8,
    0x50, 0xA9, 0x4A, 0x23, 0x43, 0x5E, 0xC1, 0x7E, 0x6F, 0x1C, 0x6A, 0xA3,
    0x7F, 0x61, 0x0B, 0x51, 0x4F, 0xBC, 0xEB, 0x05, 0xAA, 0x54, 0xAD, 0x91,
    0xA4, 0xEF, 0xA9, 0xA7, 0x79, 0xA1, 0x58, 0x59, 0x3B, 0x48, 0x72, 0xD7,
    0xA3, 0x1C, 0xB9, 0x95, 0xC8, 0xBF, 0x08, 0x9D, 0x29, 0xA9, 0x54, 0x21,
    0x29, 0x97, 0x54, 0x99, 0xCA, 0x73, 0xD4, 0xCE, 0x37, 0x8D, 0x7E, 0x1D,
    0x7E, 0x2B, 0xF0, 0x4E, 0xB3, 0x10, 0x55, 0x50, 0x83, 0x95, 0xA4, 0x91,
    0x76, 0x28, 0x9A, 0x44, 0xBC, 0xB9, 0x5E, 0xB4, 0x55, 0xC8, 0x9F, 0x84,
    0xDE, 0xBD, 0x09, 0x04, 0x4B, 0x8D, 0x54, 0x1A, 0x12, 0x9E, 0x4F, 0x1C,
    0x2A, 0xB5, 0xB1, 0xF8, 0x4A, 0x78, 0xCD, 0x99, 0xBD, 0x86, 0xA3, 0x1C,
    0xE3, 0x37, 0x30, 0x52, 0x25, 0x69, 0xAF, 0xA4, 0x8B, 0xCC, 0xBB, 0x8C,
    0x85, 0x62, 0xB3, 0x0A, 0x16, 0x32, 0x9D, 0xB4, 0x15, 0xC8, 0xBF, 0x2E,
    0xD3, 0xA9, 0x9B, 0xD0, 0xEC, 0x1E, 0x0A, 0x33, 0x67, 0x1E, 0xF1, 0x32,
    0x3C, 0xAB, 0x90, 0xB4, 0xA2, 0x5A, 0xD2, 0xAA, 0x2D, 0x57, 0xA5, 0x5A,
    0x95, 0x72, 0x8D, 0x8C, 0xEA, 0x8E, 0xDB, 0x46, 0xE6, 0x33, 0x3E, 0x25,
    0x69, 0xAF, 0x86, 0x7A, 0x4C, 0x7F, 0x24, 0x34, 0x17, 0x22, 0x8C, 0xC3,
    0x9B, 0xA0, 0xF9, 0x75, 0x07, 0x19, 0xF7, 0xFE, 0x1B, 0x50, 0xA2, 0xA5,
    0x09, 0x45, 0xB5, 0x3E, 0x18, 0x6A, 0x55, 0xA5, 0x79, 0xFC, 0xB9, 0xF1,
    0x81, 0xFB, 0xBB, 0x52, 0x69, 0xC8, 0x38, 0x96, 0x77, 0x22, 0x35, 0x92,
    0xF7, 0x20, 0x6A, 0x39, 0x97, 0x78, 0x5F, 0x4B, 0x04, 0xF6, 0x49, 0x5A,
    0x36, 0x31, 0x2B, 0xF5, 0x9D, 0x10, 0x2C, 0x39, 0x35, 0x18, 0x16, 0xE0,
    0x0D, 0x07, 0x95, 0xF2, 0x08, 0x3D, 0xA1, 0x62, 0x03, 0xC6, 0xCC, 0x43,
    0xDD, 0xF2, 0x0D, 0x3C, 0x23, 0xE7, 0x13, 0xB2, 0x2D, 0x2D, 0xEB, 0x5E,
    0xFD, 0x48, 0x57, 0xE8, 0x8F, 0x42, 0x76, 0xE0, 0xB7, 0xF5, 0x21, 0x5D,
    0xAB, 0x45, 0xB9, 0x50, 0x69, 0x8F, 0x09, 0xCE, 0x28, 0x88, 0x49, 0x6D,
    0xAF, 0xEC, 0xD2, 0xD9, 0x8A, 0x84, 0xFA, 0x26, 0x08, 0x1C, 0x74, 0x0E,
    0x78, 0x55, 0x5F, 0x91, 0x6E, 0x36, 0xFA, 0x6D, 0x1C, 0x4A, 0x95, 0x5A,
    0x32, 0xD4, 0x6B, 0x63, 0xF9, 0x4A, 0x95, 0x86, 0xFA, 0xA5, 0xAE, 0xD7,
    0xD7, 0xF4, 0x61, 0xA1, 0x38, 0xA4, 0x3C, 0x10, 0x16, 0xFB, 0xCF, 0x0B,
    0xA1, 0xB7, 0xEB, 0x27, 0x26, 0x2E, 0x32, 0xEE, 0xA8, 0xED, 0x39, 0x8D,
    0x9D, 0xF9, 0x86, 0xF9, 0x03, 0xC9, 0x78, 0xC2, 0xE4, 0x55, 0x07, 0x01,
    0xF7, 0xE4, 0x84, 0x58, 0x91, 0xFE, 0x97, 0xB1, 0xF1, 0xC6, 0x99, 0xDF,
    0x59, 0xF0, 0x61, 0xA0, 0xFC, 0x50, 0xF7, 0xEB, 0x3A, 0x7D, 0x45, 0xA7,
    0x6B, 0xBB, 0xD0, 0x76, 0x25, 0x42, 0x0B, 0x9A, 0x0B, 0x46, 0x6C, 0x10,
    0xEC, 0xB9, 0xA3, 0xE9, 0x9C, 0xD0, 0x49, 0xBA, 0xCB, 0x04, 0x62, 0x29,
    0x3C, 0xA7, 0x92, 0xB4, 0x64, 0x8E, 0x51, 0xAD, 0xFB, 0x42, 0x2C, 0x30,
    0x76, 0x9D, 0x70, 0xA0, 0xD8, 0x1F, 0x89, 0x62, 0x1D, 0xA7, 0x42, 0xF9,
    0x86, 0xFC, 0xB8, 0x36, 0x38, 0x39, 0xDD, 0xA7, 0x07, 0xB4, 0x43, 0xFF,
    0x4D, 0x91, 0x7A, 0x4A, 0x0C, 0xC1, 0x34, 0xA0, 0x3A, 0x08, 0x7A, 0x3B,
    0xB6, 0x77, 0xD2, 0x20, 0xCB, 0xCE, 0xCF, 0xBB, 0xD4, 0x9E, 0x34, 0x94,
    0x53, 0x8E, 0x8D, 0x3D, 0x58, 0xD6, 0xAA, 0xA4, 0x5D, 0x7A, 0x9D, 0x29,
    0xC2, 0xB1, 0xEB, 0x80, 0xFC, 0x80, 0x01, 0x8B, 0xB1, 0xD0, 0xAF, 0x8C,
    0xD1, 0x36, 0xA3, 0xF7, 0x2B, 0x2D, 0xEA, 0xFF, 0xEA, 0x8F, 0x95, 0x1A,
    0x92, 0x18, 0x5A, 0x49, 0x40, 0x3D, 0x56, 0x6A, 0x13, 0x77, 0xA8, 0x67,
    0xF6, 0x3B, 0x51, 0x2F, 0xDC, 0xD3, 0x13, 0x3A, 0x47, 0x52, 0xAD, 0x15,
    0x9B, 0x47, 0x65, 0xB6, 0x64, 0x14, 0x66, 0x56, 0xEA, 0x43, 0xD3, 0x09,
    0x93, 0xC5, 0x03, 0xF0, 0x04, 0xE3, 0x4B, 0x10, 0x5A, 0x0C, 0xEA, 0xAB,
    0xEC, 0x44, 0xAF, 0x0D, 0x43, 0x8D, 0xE4, 0x93, 0x1A, 0x2B, 0x7A, 0x48,
    0x5F, 0x31, 0xA4, 0x22, 0x4B, 0x63, 0xC5, 0x8A, 0x6C, 0x8A, 0x4E, 0xB2,
    0x3F, 0xA3, 0xBF, 0xD5, 0x57, 0x75, 0xBA, 0x06, 0x42, 0x0B, 0x41, 0x72,
    0xFB, 0x3A, 0x55, 0x17, 0xEB, 0x22, 0xF9, 0x04, 0x78, 0x62, 0x7C, 0x72,
    0x9E, 0x3D, 0xD7, 0x4B, 0xBF, 0x54, 0x68, 0x28, 0x67, 0x30, 0x4B, 0x49,
    0xCB, 0xFA, 0x94, 0x7D, 0xBE, 0x49, 0xA3, 0x73, 0xC9, 0x26, 0x91, 0x8F,
    0x4E, 0x47, 0x7D, 0x3D, 0x61, 0x4C, 0x57, 0x68, 0xDC, 0x01, 0x69, 0x33,
    0x77, 0x6D, 0x7E, 0xFF, 0x8A, 0x64, 0x93, 0xD9, 0xA9, 0x2F, 0x5A, 0x58,
    0x32, 0x2F, 0x94, 0x99, 0x5C, 0x1F, 0xA6, 0x48, 0x91, 0x52, 0xA1, 0xBE,
    0xAE, 0xD0, 0xA2, 0xBC, 0x21, 0xCC, 0xF5, 0xB0, 0xAE, 0xD5, 0x9F, 0xE9,
    0x0C, 0xFD, 0xA1, 0xFE, 0x46, 0x3F, 0xD2, 0x03, 0xB6, 0xD0, 0xB9, 0xCE,
    0x53, 0x62, 0x82, 0xE0, 0x78, 0xE4, 0xEF, 0x6C, 0x2E, 0x6E, 0x36, 0x65,
    0x30, 0xA1, 0x52, 0xA1, 0x55, 0x49, 0x23, 0x7D, 0xCE, 0x14, 0x68, 0xCF,
    0x38, 0x0C, 0x71, 0xFA, 0x66, 0x28, 0x7F, 0x1C, 0xEA, 0xE9, 0x97, 0x1A,
    0x6A, 0x9F, 0x4A, 0x0B, 0x42, 0xAB, 0x4E, 0xAF, 0xDE, 0xC7, 0x6A, 0xCB,
    0x92, 0x96, 0xF5, 0x98, 0xBE, 0xA3, 0x7E, 0x48, 0x59, 0xC6, 0x8A, 0x2D,
    0x4D, 0x11, 0x07, 0xFA, 0x7F, 0x56, 0x3B, 0x55, 0x06, 0x0F, 0xB0, 0x6E,
    0xA9, 0x32, 0xCF, 0xC6, 0xB5, 0x86, 0xF2, 0x1E, 0xE0, 0xF9, 0x42, 0xDB,
    0x8C, 0x87, 0x32, 0x65, 0xBA, 0xDB, 0x16, 0xB9, 0x0C, 0xC4, 0x28, 0x6C,
    0x11, 0xBD, 0x5E, 0xF8, 0x5C, 0x4B, 0x8D, 0xDA, 0x02, 0x1C, 0xB7, 0x41,
    0xE4, 0xFB, 0xBD, 0xE4, 0xA9, 0x9E, 0x76, 0xAA, 0x71, 0x46, 0x15, 0x06,
    0x19, 0x87, 0x3A, 0xE8, 0x84, 0xD2, 0x26, 0x3B, 0x2F, 0x94, 0x98, 0x09,
    0x73, 0x31, 0xF9, 0x36, 0x93, 0xE9, 0x33, 0x75, 0xCB, 0x58, 0xCE, 0xAF,
    0xB6, 0xFB, 0x6A, 0xA3, 0xA5, 0x33, 0x67, 0x85, 0x72, 0x39, 0x57, 0xC8,
    0xF1, 0x5B, 0x14, 0x94, 0xA4, 0xD3, 0x09, 0xD2, 0x52, 0x40, 0xDC, 0x2B,
    0xD6, 0xA1, 0xC5, 0x9C, 0x8E, 0x0B, 0xCF, 0x57, 0xAC, 0x85, 0x76, 0xDE,
    0xF8, 0xA9, 0x0D, 0x96, 0x4A, 0xA2, 0x73, 0xD1, 0x8D, 0xAA, 0x95, 0xCB,
    0x27, 0xB1, 0x64, 0x8E, 0xE7, 0x24, 0x94, 0x6A, 0x87, 0x3A, 0xFF, 0x5D,
    0xBD, 0xA0, 0x7F, 0x7D, 0x34, 0xEE, 0x24, 0xFA, 0x4B, 0x7A, 0xC0, 0xA8,
    0x3C, 0xB4, 0x60, 0xC9, 0xAB, 0xB0, 0x2A, 0x20, 0xE3, 0x97, 0x77, 0xA8,
    0xDA, 0x94, 0x9C, 0x24, 0xFD, 0x43, 0xC8, 0xF1, 0xCC, 0x29, 0x53, 0xA4,
    0x8F, 0xCA, 0xB9, 0x42, 0x8E, 0xEB, 0x7C, 0x30, 0x54, 0x04, 0xC3, 0x2A,
    0xE5, 0x7A, 0xA7, 0x8D, 0x1B, 0x02, 0xA3, 0x73, 0x37, 0x82, 0xFC, 0x09,
    0xE8, 0x2B, 0x81, 0x46, 0x8E, 0x4D, 0x77, 0xCF, 0x08, 0x67, 0x0B, 0xE3,
    0x0E, 0x37, 0xFC, 0x43, 0x36, 0xEC, 0x7C, 0x30, 0x62, 0xB1, 0xDE, 0xA1,
    0x1B, 0xB4, 0x47, 0xD2, 0x30, 0x4C, 0x51, 0x41, 0x47, 0x0C, 0x6D, 0xE9,
    0x56, 0x0C, 0x99, 0xA1, 0x09, 0x83, 0xF7, 0xE9, 0x0A, 0x49, 0xBB, 0x2D,
    0xB8, 0x39, 0x42, 0x28, 0x55, 0x4F, 0xE8, 0x1F, 0xC2, 0xD2, 0x35, 0x73,
    0xA8, 0x2D, 0x18, 0xF2, 0x69, 0x37, 0x94, 0x8C, 0x47, 0x85, 0xEB, 0xF6,
    0x01, 0x92, 0xB9, 0x47, 0xDF, 0x64, 0x0C, 0xE6, 0xF4, 0xAA, 0x1F, 0x66,
    0x6F, 0xE7, 0x02, 0x94, 0xC6, 0x25, 0x0E, 0x89, 0x46, 0xEA, 0x11, 0xFA,
    0xDF, 0xFA, 0xA5, 0x31, 0xF9, 0x5E, 0x35, 0xEA, 0x73, 0x55, 0x0A, 0x96,
    0xDB, 0xFB, 0x12, 0x95, 0x46, 0xF6, 0x94, 0xDA, 0x68, 0x5B, 0x07, 0xCE,
    0xF2, 0x42, 0x94, 0x05, 0x77, 0x68, 0x18, 0x42, 0x6D, 0x6F, 0x93, 0x86,
    0x2D, 0xE7, 0xBA, 0xD6, 0x48, 0xBF, 0x1A, 0x33, 0xB4, 0x88, 0x47, 0x49,
    0xD6, 0x85, 0x7D, 0x76, 0x06, 0xDA, 0x2D, 0x99, 0x7A, 0xF2, 0x8F, 0x1F,
    0x0F, 0x42, 0xA7, 0xE5, 0xDF, 0xBF, 0xF3, 0x23, 0x1B, 0xF4, 0x34, 0xDD,
    0x64, 0xAE, 0x52, 0x1D, 0x3E, 0xD5, 0xA6, 0x56, 0xAE, 0xC6, 0x7E, 0x4B,
    0x4D, 0x18, 0xE4, 0x46, 0xCA, 0x8D, 0xA7, 0xDC, 0xD8, 0xFF, 0x32, 0x2C,
    0x67, 0x64, 0x9C, 0x75, 0x96, 0xBC, 0x6A, 0x6C, 0x82, 0xA3, 0x5A, 0xAB,
    0x16, 0x2E, 0xBB, 0x11, 0x6F, 0x30, 0x7F, 0x61, 0x63, 0xE9, 0xB0, 0x23,
    0xD0, 0xE5, 0x81, 0xE9, 0x1D, 0x9D, 0xFC, 0x32, 0xAC, 0x84, 0xD7, 0xEB,
    0x99, 0x2E, 0x50, 0xA9, 0x9B, 0xF5, 0x6D, 0x93, 0x73, 0xEF, 0xA5, 0x49,
    0xB9, 0x72, 0xE3, 0x93, 0x22, 0x48, 0xB5, 0x4F, 0x94, 0x79, 0xE9, 0xAF,
    0xE4, 0xD5, 0xAB, 0xCF, 0x02, 0x8C, 0xEC, 0x6F, 0xCC, 0x5B, 0x48, 0x85,
    0x7A, 0x8A, 0x84, 0x12, 0x7D, 0x3B, 0x20, 0xBA, 0xDA, 0x72, 0x7F, 0xFC,
    0x93, 0x9C, 0x66, 0x39, 0xD7, 0x25, 0xC3, 0x85, 0x32, 0x67, 0x03, 0x8E,
    0x58, 0x13, 0xFB, 0xF9, 0xF3, 0x9E, 0x6B, 0xB4, 0x6A, 0xC7, 0xE3, 0x0A,
    0x69, 0x88, 0xDA, 0x96, 0xA1, 0xB6, 0x9F, 0xDD, 0xE0, 0xB2, 0x75, 0x9E,
    0x73, 0xDC, 0x13, 0x96, 0x5B, 0x35, 0x9E, 0xC7, 0x4D, 0xBE, 0x73, 0x0B,
    0x61, 0x5D, 0xC2, 0xA3, 0x19, 0x31, 0x6F, 0x8D, 0xBA, 0x6A, 0x8E, 0x4C,
    0xAF, 0xE5, 0x17, 0x26, 0x22, 0xE8, 0x7F, 0x0F, 0x43, 0x55, 0x26, 0x86,
    0x55, 0x48, 0x9B, 0x44, 0x8A, 0x15, 0x9B, 0x0E, 0x98, 0x13, 0xE7, 0xAD,
    0x81, 0xFC, 0xE0, 0xD9, 0xE8, 0x56, 0x35, 0x7E, 0x54, 0xC3, 0x94, 0x85,
    0xA4, 0x25, 0xD5, 0x5A, 0x55, 0x13, 0xB6, 0x76, 0xF9, 0x81, 0x75, 0xEB,
    0xA7, 0xF7, 0xCA, 0x9C, 0xD9, 0xF4, 0xAC, 0x5A, 0xD8, 0xD3, 0x1B, 0xFE,
    0x69, 0x38, 0x6B, 0x39, 0xB0, 0x7C, 0xA5, 0xD2, 0x6C, 0xCE, 0x2F, 0x0D,
    0xED, 0x39, 0x61, 0xD1, 0x82, 0xB3, 0xE6, 0xEF, 0xD7, 0x3E, 0xB9, 0xAC,
    0xC1, 0xD0, 0x5C, 0x1E, 0xC9, 0x9B, 0xD1, 0x5C, 0x2E, 0x4B, 0x70, 0x9D,
    0xDD, 0xE3, 0xAA, 0xCD, 0x99, 0xB2, 0x67, 0xEF, 0x1F, 0xFF, 0x2F, 0x9C,
    0x6D, 0x83, 0xAF, 0xC8, 0xEB, 0xDF, 0x61, 0x10, 0x03, 0x07, 0xE7, 0xEA,
    0x11, 0x4B, 0x40, 0xEE, 0xEB, 0xA0, 0x7B, 0x1D, 0x28, 0x57, 0xB4, 0x9C,
    0x11, 0xC9, 0x59, 0xEB, 0xCA, 0xD4, 0xDF, 0xC8, 0xF2, 0x83, 0xFB, 0xF4,
    0xB0, 0x7E, 0xA0, 0x55, 0x13, 0x8F, 0xD2, 0xEE, 0xAB, 0x5B, 0xE6, 0xB0,
    0xD6, 0x0E, 0x33, 0x9F, 0x89, 0xD9, 0x7E, 0x97, 0xE8, 0xEC, 0x2B, 0xD6,
    0x2D, 0xC1, 0xE4, 0xAE, 0xAA, 0xC9, 0x38, 0x7B, 0xBF, 0xC1, 0xD1, 0xFF,
    0x7D, 0x8A, 0x82, 0xC7, 0xB0, 0x20, 0x2E, 0xD8, 0x0F, 0xEE, 0x73, 0x47,
    0x25, 0xBA, 0x5B, 0xDE, 0x86, 0xAE, 0x84, 0x07, 0xEE, 0x53, 0x25, 0x69,
    0x97, 0x2A, 0x3D, 0x26, 0x84, 0xBE, 0x6B, 0xBE, 0x99, 0x3A, 0x72, 0x00,
    0x3E, 0x9D, 0xD5, 0x38, 0x49, 0x2E, 0x75, 0x3D, 0xB2, 0x77, 0x6B, 0x49,
    0x0F, 0xE9, 0x06, 0x7D, 0x53, 0xE7, 0x05, 0xA5, 0xF4, 0xAD, 0xC0, 0x47,
    0x5E, 0x79, 0x0D, 0xED, 0xCE, 0x42, 0x95, 0xDE, 0x11, 0x2C, 0x89, 0x97,
    0xE4, 0xBE, 0x59, 0x81, 0x54, 0xA5, 0x1A, 0x5F, 0xA4, 0x6C, 0x45, 0x84,
    0x8E, 0x93, 0x46, 0xAA, 0xF4, 0xAB, 0x10, 0x06, 0x5B, 0x69, 0xE4, 0xA8,
    0xD9, 0xF8, 0x9F, 0xFF, 0xEE, 0xC0, 0xAA, 0x4B, 0x6A, 0x17, 0x30, 0x1C,
    0x7B, 0x3D, 0xAA, 0x4C, 0x89, 0x62, 0xFD, 0x89, 0x34, 0x25, 0x79, 0x0A,
    0x93, 0x28, 0x35, 0x0A, 0x66, 0x68, 0xA4, 0x3A, 0xD4, 0xF0, 0x96, 0xF5,
    0x13, 0x5D, 0xA8, 0xD7, 0xB7, 0xD0, 0x40, 0x73, 0x8A, 0x15, 0xEB, 0x11,
    0x2D, 0x4B, 0x2A, 0x83, 0xC8, 0x79, 0x07, 0x26, 0x97, 0x74, 0xBB, 0xE6,
    0x0D, 0xD9, 0x58, 0x7D, 0x8B, 0x18, 0xDC, 0xFD, 0x03, 0xA1, 0x8B, 0x8D,
    0x6F, 0x9C, 0x56, 0x6A, 0xD4, 0xDF, 0x52, 0xCB, 0xC3, 0xF8, 0xBC, 0xC5,
    0x90, 0x2E, 0xB7, 0xC0, 0xF9, 0x33, 0x75, 0x7E, 0xA4, 0x5F, 0xC8, 0x97,
    0x95, 0x26, 0x99, 0xB7, 0xD6, 0x48, 0x9F, 0x08, 0xC1, 0xE7, 0x93, 0x52,
    0xC8, 0xDF, 0x75, 0xD3, 0xDF, 0xD1, 0xAE, 0x36, 0xA1, 0xB9, 0x49, 0x1F,
    0x32, 0x0A, 0xF8, 0x78, 0x7E, 0x60, 0x71, 0x7C, 0x24, 0x0C, 0xE9, 0x2A,
    0x18, 0x31, 0xC7, 0xCA, 0x23, 0x49, 0x2B, 0x7A, 0x67, 0x88, 0x17, 0xE3,
    0x56, 0x09, 0xDC, 0xFB, 0x93, 0xA9, 0xEE, 0x0D, 0xF2, 0xEE, 0xC5, 0x46,
    0xC6, 0x13, 0x43, 0xB3, 0x1C, 0x7B, 0x2C, 0x8A, 0xF4, 0x4E, 0xF8, 0x0C,
    0xFD, 0x1F, 0x9D, 0xF5, 0x6A, 0x53, 0x1A, 0x8D, 0x52, 0x6B, 0x0C, 0x49,
    0xA5, 0xFB, 0x83, 0xD9, 0xE9, 0xEB, 0x0E, 0x93, 0xB0, 0x62, 0xBF, 0x0B,
    0xE0, 0xEC, 0xC3, 0xA5, 0x36, 0x5D, 0xAF, 0x81, 0x93, 0x96, 0xFB, 0x12,
    0x2B, 0xD5, 0x8D, 0xAA, 0xE4, 0x9D, 0x55, 0xF7, 0xDB, 0xFF, 0x7F, 0x59,
    0x17, 0xDA, 0xC4, 0xE3, 0x56, 0x91, 0xD3, 0x79, 0x7E, 0x99, 0x06, 0x42,
    0x99, 0xCE, 0x33, 0xE1, 0x2A, 0x43, 0xD1, 0x6D, 0x7C, 0x5E, 0xB5, 0xA4,
    0xFF, 0x6A, 0x2E, 0xB3, 0x05, 0x40, 0x67, 0x75, 0x39, 0x3B, 0x09, 0xFA,
    0xC7, 0x4E, 0x74, 0x6A, 0xD3, 0xDA, 0xEF, 0x52, 0x64, 0xE8, 0x47, 0xFA,
    0xB4, 0x31, 0x5C, 0xD7, 0xA7, 0xDB, 0x31, 0xDC, 0x93, 0x93, 0xE9, 0x07,
    0xD3, 0xDC, 0x3D, 0x25, 0xA6, 0xCB, 0x3F, 0x65, 0x8C, 0xDF, 0x78, 0x98,
    0xDE, 0xFD, 0x2D, 0x74, 0xD5, 0xAC, 0x7E, 0xAF, 0xB1, 0xEB, 0x51, 0x53,
    0x95, 0x4D, 0x85, 0x60, 0x1C, 0x56, 0xF4, 0x43, 0xF9, 0x9C, 0x91, 0x5D,
    0xD3, 0xFE, 0x5F, 0x7C, 0x62, 0x3F, 0x04, 0x19, 0xE3, 0xB2, 0xEC, 0x68,
    0x71, 0xBB, 0xD5, 0x55, 0xD1, 0x40, 0xB1, 0x12, 0x29, 0x54, 0x62, 0xA7,
    0x29, 0x5F, 0x59, 0x9D, 0xAE, 0xD6, 0x5D, 0x53, 0x93, 0xED, 0x29, 0x32,
    0xBF, 0xB0, 0x2F, 0x14, 0x69, 0x24, 0x9F, 0xB8, 0x2E, 0x02, 0xDF, 0xB8,
    0x84, 0xC6, 0xCD, 0xEB, 0x6C, 0x76, 0xB9, 0x40, 0x5E, 0x41, 0xD7, 0xCA,
    0x3B, 0xE6, 0x53, 0xEB, 0x81, 0xE0, 0x33, 0x9A, 0x1A, 0x3C, 0x71, 0x9A,
    0xFA, 0x97, 0x7D, 0x6A, 0x46, 0x22, 0xD3, 0xD9, 0xEE, 0xB7, 0x0A, 0xCD,
    0x2B, 0x09, 0x72, 0x77, 0xE7, 0x0C, 0xD6, 0xF7, 0xE2, 0xE2, 0x10, 0xF9,
    0x61, 0xC7, 0x74, 0x9D, 0xEF, 0x36, 0x08, 0x3A, 0x64, 0x68, 0x1E, 0x41,
    0x63, 0x2B, 0x72, 0x15, 0xBA, 0x57, 0x68, 0xDB, 0x3A, 0x9A, 0x5D, 0xFA,
    0x4A, 0x24, 0xD5, 0x7A, 0xAC, 0x35, 0xFA, 0x38, 0xF9, 0xA4, 0x61, 0xA8,
    0x02, 0xD8, 0xF3, 0x2E, 0x9B, 0x94, 0xFB, 0x85, 0x4C, 0x3B, 0x5B, 0xB6,
    0xBD, 0x7D, 0xFB, 0x50, 0xB5, 0x7E, 0x61, 0xB4, 0x8F, 0xAC, 0x59, 0xAD,
    0xA7, 0x2B, 0x54, 0xAA, 0xCB, 0xED, 0x19, 0x8F, 0x0D, 0xBE, 0x3D, 0x35,
    0x5D, 0xDF, 0xC4, 0x16, 0x09, 0xDD, 0x66, 0xE1, 0x89, 0x1B, 0xC5, 0x2D,
    0xB5, 0x4B, 0x75, 0xEC, 0x51, 0x62, 0x6E, 0xCE, 0xDA, 0xD4, 0x1F, 0xE8,
    0x27, 0x16, 0x45, 0xCC, 0x4A, 0xC6, 0x48, 0xAE, 0x14, 0xD2, 0x7A, 0x9A,
    0xF5, 0x05, 0x59, 0x13, 0x8E, 0x5E, 0x59, 0xF0, 0x3C, 0x06, 0xAC, 0x4E,
    0x71, 0x45, 0x42, 0x9F, 0x92, 0xF3, 0x10, 0x02, 0x52, 0x4A, 0x06, 0x94,
    0x94, 0x7C, 0x96, 0x84, 0xA2, 0x4B, 0x88, 0xF0, 0x2D, 0xB9, 0x25, 0x62,
    0x69, 0xEA, 0xFD, 0x82, 0x94, 0x65, 0x12, 0x22, 0xAE, 0xE4, 0x04, 0x86,
    0x44, 0xF4, 0xA8, 0x80, 0x3E, 0xAE, 0x13, 0x48, 0xF4, 0xA9, 0x38, 0x82,
    0x8A, 0x1A, 0xD6, 0x11, 0xA4, 0xCD, 0x31, 0xE4, 0x51, 0x52, 0x4A, 0x32,
    0x6A, 0xA6, 0xDB, 0x81, 0x23, 0x6B, 0xFE, 0x89, 0xA9, 0xDB, 0x6D, 0x40,
    0xAF, 0x1C, 0x9F, 0xF4, 0x8E, 0x5B, 0x3B, 0x5A, 0x53, 0x24, 0xE7, 0x05,
    0x3C, 0x18, 0x72, 0xB2, 0xDE, 0xFB, 0x8E, 0x84, 0x76, 0xA9, 0xDB, 0xE7,
    0x2F, 0xCD, 0xB9, 0x29, 0x24, 0x7D, 0x75, 0x8A, 0x56, 0xB1, 0x12, 0xA5,
    0x4A, 0x74, 0xB1, 0x45, 0x94, 0x7B, 0x82, 0xA8, 0x78, 0xEA, 0xAD, 0xEA,
    0xF7, 0x6D, 0x9C, 0xED, 0xEB, 0x92, 0x7D, 0xF4, 0xE7, 0xD2, 0x58, 0xD9,
    0x63, 0x52, 0xF6, 0x65, 0x5C, 0xDB, 0xE2, 0xA6, 0x1D, 0x2D, 0xE4, 0x7B,
    0x83, 0xB7, 0x18, 0xEB, 0x75, 0x49, 0xBE, 0xF4, 0x65, 0xB9, 0x30, 0xB3,
    0x29, 0x46, 0x44, 0x42, 0x37, 0xCD, 0xC8, 0xFD, 0x35, 0x61, 0xB2, 0xF4,
    0x85, 0x19, 0x13, 0xFE, 0x7C, 0xAB, 0x74, 0xE9, 0xBC, 0xBC, 0xC6, 0x5A,
    0xBC, 0xD3, 0x92, 0x94, 0xF1, 0xFE, 0xCA, 0xD8, 0x2D, 0x4B, 0xD2, 0xD7,
    0x49, 0x2D, 0x44, 0xA7, 0xD1, 0x97, 0x86, 0xA1, 0xB2, 0xD0, 0x62, 0xFF,
    0x56, 0x02, 0xFC, 0x65, 0x4F, 0xD9, 0xCD, 0xA3, 0xCE, 0x07, 0x78, 0xAA,
    0x35, 0xF6, 0x3B, 0x11, 0xFA, 0x98, 0xBA, 0xC1, 0x53, 0xB2, 0x56, 0xDD,
    0x72, 0x6C, 0xFD, 0x95, 0x08, 0x7D, 0x49, 0xED, 0xF2, 0x76, 0xE3, 0x0E,
    0xD7, 0xAA, 0xF4, 0x31, 0x4B, 0x8E, 0x36, 0xF1, 0xDD, 0xDA, 0x57, 0x62,
    0xF6, 0x69, 0x34, 0x63, 0x36, 0xBB, 0x2C, 0x5C, 0x8E, 0xDA, 0xB6, 0xE4,
    0x65, 0x41, 0xF6, 0x7F, 0xFE, 0xFA, 0xC3, 0x88, 0x10, 0x74, 0x64, 0x04,
    0x87, 0xDC, 0x09, 0x0C, 0xA8, 0x81, 0x98, 0x02, 0x48, 0xA8, 0xA9, 0x88,
    0xF8, 0x00, 0x79, 0xA7, 0x34, 0x16, 0x8C, 0xC8, 0x28, 0x89, 0x80, 0x7D,
    0x26, 0xBD, 0x11, 0x89, 0x75, 0xF8, 0x55, 0xEC, 0xE0, 0x54, 0x6A, 0x62,
    0x0A, 0x52, 0x20, 0xA7, 0x07, 0xAC, 0x10, 0x31, 0xA4, 0xE2, 0xCB, 0x7C,
    0xC0, 0x64, 0x34, 0x87, 0x75, 0xB5, 0xEC, 0xC5, 0x44, 0x88, 0x9A, 0x08,
    0xD1, 0xEB, 0xB8, 0xA3, 0x06, 0x7E, 0x85, 0x4C, 0x17, 0xC5, 0xCD, 0x1B,
    0xAF, 0x6F, 0x3E, 0xB2, 0xDB, 0xB3, 0x7D, 0x57, 0x7F, 0xC6, 0x07, 0xCC,
    0x54, 0xA5, 0x63, 0xF4, 0xE8, 0x09, 0xDD, 0xDD, 0x21, 0x2E, 0x3E, 0xEC,
    0x74, 0x51, 0xC2, 0x4B, 0x84, 0xE6, 0x83, 0xCE, 0xE8, 0x2B, 0xB5, 0xEC,
    0xB1, 0x0B, 0x99, 0x5C, 0xFC, 0xB7, 0x6C, 0xB6, 0x5F, 0xBA, 0x6A, 0x9D,
    0xD4, 0x9E, 0xB4, 0x24, 0x18, 0xDB, 0x0F, 0x3B, 0xD8, 0xBF, 0x56, 0xA1,
    0x6B, 0x95, 0x06, 0x8E, 0x0A, 0xD7, 0x6E, 0x4F, 0xDF, 0xED, 0x1E, 0xF1,
    0x2E, 0xD9, 0x1F, 0x29, 0x6B, 0x07, 0x8C, 0x86, 0xC8, 0x33, 0x84, 0xD0,
    0x37, 0x3A, 0xEE, 0x70, 0xFE, 0xB6, 0x73, 0x5F, 0x47, 0x41, 0x61, 0xBA,
    0x3E, 0x9C, 0x0F, 0x6A, 0x8F, 0x6A, 0xE5, 0x5A, 0xB2, 0xBC, 0x8F, 0x9B,
    0x9E, 0xCF, 0x08, 0x5C, 0xB7, 0x09, 0xE4, 0x9D, 0x16, 0x3A, 0xCC, 0x74,
    0x4D, 0x57, 0xCB, 0xAC, 0x54, 0xE8, 0x8B, 0x42, 0xAE, 0x5A, 0x30, 0x56,
    0x01, 0xDE, 0xEE, 0x68, 0xFF, 0x52, 0x67, 0x7D, 0x8B, 0xCE, 0xDB, 0x7F,
    0x61, 0x83, 0xF8, 0x16, 0x32, 0x5F, 0x8F, 0x4B, 0xD5, 0x53, 0xD4, 0x39,
    0x5C, 0x2E, 0xE7, 0xEB, 0x97, 0x92, 0x52, 0xF3, 0xEC, 0x51, 0xAC, 0x1F,
    0xC9, 0x05, 0xB4, 0x5E, 0xC9, 0x39, 0x1D, 0xE1, 0xE2, 0xCB, 0x42, 0x37,
    0x0B, 0x1D, 0xB1, 0x91, 0x9E, 0xDE, 0xD6, 0xF5, 0xA6, 0x10, 0x27, 0x4E,
    0x53, 0x7F, 0x24, 0xE9, 0x0D, 0x16, 0xF3, 0x4F, 0x28, 0xD2, 0x97, 0x42,
    0x0C, 0xF5, 0x2B, 0x22, 0x2A, 0x7A, 0x0C, 0xE9, 0x77, 0xD8, 0xFD, 0x9D,
    0x6C, 0x0B, 0x32, 0x04, 0x11, 0x25, 0xB0, 0xCA, 0x3C, 0x11, 0x10, 0xB1,
    0xD8, 0x29, 0x8F, 0xA2, 0x66, 0x8E, 0x84, 0x21, 0x25, 0x19, 0x90, 0xF2,
    0x03, 0x2A, 0x5E, 0x4A, 0xCE, 0x80, 0x88, 0x92, 0x9C, 0xDC, 0xA4, 0x35,
    0x23, 0x03, 0x32, 0xEE, 0xE5, 0xE5, 0x44, 0xEC, 0x59, 0x87, 0xAC, 0x4F,
    0x42, 0x02, 0xFC, 0x1E, 0x09, 0x15, 0x11, 0x50, 0x4E, 0xBD, 0x9F, 0xB1,
    0x97, 0x2B, 0x88, 0x11, 0xF5, 0xA4, 0x66, 0x7B, 0x85, 0x53, 0x7D, 0x27,
    0x43, 0xC4, 0x88, 0x6D, 0xA6, 0x8C, 0xC6, 0xE1, 0x56, 0x96, 0x80, 0x98,
    0x0A, 0x58, 0x40, 0x24, 0xC4, 0x0C, 0x58, 0xA5, 0x20, 0x27, 0xE3, 0x67,
    0x1D, 0x8A, 0x2F, 0x23, 0xA2, 0x02, 0x6A, 0x06, 0xE6, 0xD2, 0xDC, 0xC7,
    0x89, 0x94, 0x88, 0x1E, 0x43, 0x4A, 0x06, 0xF4, 0x48, 0x89, 0x11, 0x15,
    0x50, 0x00, 0x8F, 0xF1, 0x42, 0x2A, 0xD2, 0x4E, 0xD5, 0xB5, 0x16, 0x08,
    0xF8, 0x6D, 0x5C, 0xB3, 0x73, 0x57, 0x87, 0x76, 0xC4, 0x2E, 0x6A, 0x2A,
    0x52, 0x32, 0xF6, 0x8D, 0x77, 0xBF, 0x9E, 0x0C, 0x71, 0xC4, 0x45, 0xAF,
    0x81, 0x84, 0x94, 0x1C, 0x3A, 0x9A, 0x63, 0xAF, 0x65, 0x9E, 0x8C, 0x8A,
    0x8C, 0x98, 0x65, 0x62, 0x22, 0x6A, 0x72, 0x33, 0x9B, 0x23, 0xBE, 0xD7,
    0xB1, 0xDA, 0xAB, 0x40, 0xC2, 0x2A, 0x31, 0x2B, 0xE4, 0x54, 0xEC, 0xE1,
    0x28, 0x62, 0x52, 0xA0, 0x32, 0x63, 0x2B, 0x2A, 0x44, 0x44, 0x4A, 0x45,
    0x0F, 0xF1, 0x9B, 0xCC, 0x53, 0x51, 0x50, 0x6C, 0x62, 0xDB, 0x4E, 0x4D,
    0x8F, 0xA3, 0x0D, 0xF1, 0xBA, 0x83, 0x7C, 0x05, 0xD7, 0xD1, 0x03, 0x32,
    0x0A, 0x26, 0x6C, 0xC9, 0x6B, 0x00, 0xE6, 0x51, 0x31, 0xD5, 0x96, 0xDA,
    0x40, 0x12, 0xF4, 0xBC, 0x2F, 0x1B, 0xCC, 0xCB, 0x87, 0x2D, 0x99, 0xE8,
    0x94, 0x7C, 0x9F, 0x6C, 0x92, 0x76, 0x59, 0xD2, 0xA4, 0x5D, 0x93, 0xA9,
    0xC6, 0xDA, 0x5C, 0x6A, 0xDD, 0xA4, 0xC8, 0x0A, 0xDF, 0x6B, 0x3B, 0x39,
    0x5D, 0x36, 0xFF, 0x39, 0xA6, 0x4F, 0x66, 0x61, 0x70, 0x9C, 0x69, 0x9F,
    0x8E, 0x3E, 0xD0, 0xF9, 0x38, 0xFE, 0x0D, 0x78, 0x20, 0x78, 0xEF, 0x43,
    0xF3, 0x9A, 0x9D, 0xF7, 0x5C, 0xB3, 0x4A, 0x45, 0x8F, 0x84, 0x9C, 0x3E,
    0x30, 0x02, 0x60, 0x05, 0x27, 0x63, 0x39, 0x05, 0x70, 0x2B, 0xCE, 0x46,
    0x8B, 0x02, 0xC8, 0xC9, 0xF0, 0x9E, 0xFA, 0x3C, 0xF0, 0x4F, 0x48, 0x49,
    0x70, 0xFE, 0x84, 0xB7, 0xB9, 0x8E, 0x13, 0xA2, 0x40, 0xE9, 0x87, 0x4D,
    0x07, 0xC8, 0xFC, 0x88, 0xD4, 0x68, 0x39, 0x6B, 0x27, 0x40, 0x06, 0x0C,
    0x80, 0x98, 0x98, 0x88, 0x8A, 0xBF, 0x24, 0x22, 0xA5, 0xA6, 0xC2, 0xD9,
    0x76, 0x47, 0xE1, 0x65, 0xA3, 0xF5, 0xE3, 0xFC, 0x9C, 0x0C, 0x88, 0xC9,
    0xA7, 0x9F, 0xF9, 0x1B, 0x71, 0xFC, 0x1C, 0xF8, 0x05, 0x7D, 0x0A, 0x44,
    0xC5, 0xC0, 0xD0, 0x8F, 0x8C, 0x99, 0xC4, 0x82, 0x3D, 0xB8, 0x20, 0x26,
    0xEA, 0x08, 0x41, 0x7E, 0xCA, 0x88, 0x8C, 0x15, 0x43, 0x3A, 0x66, 0xA3,
    0x10, 0x71, 0x2C, 0x7D, 0x46, 0xB6, 0x70, 0x29, 0x31, 0x25, 0x2E, 0xD0,
    0x92, 0x2D, 0xC5, 0x34, 0x3B, 0xCF, 0x31, 0x64, 0x40, 0x46, 0x4D, 0xCC,
    0x02, 0xFF, 0x8A, 0x9A, 0x92, 0x98, 0x8C, 0x8A, 0x94, 0xC8, 0x48, 0xB7,
    0x40, 0x45, 0x89, 0xF8, 0x3E, 0xF3, 0x14, 0xD4, 0x40, 0xD6, 0x0A, 0xC7,
    0x0C, 0x9E, 0x13, 0xEB, 0x79, 0x70, 0xBB, 0x21, 0xDC, 0x15, 0x5F, 0x2D,
    0x53, 0xD2, 0x67, 0x40, 0x4D, 0x4D, 0xDD, 0x81, 0xDE, 0x3B, 0xE8, 0x93,
    0x33, 0x4F, 0x44, 0x4C, 0xC1, 0xC6, 0x37, 0x60, 0x56, 0xFC, 0x33, 0xBE,
    0x4E, 0xDF, 0x28, 0x57, 0x52, 0x93, 0x12, 0x13, 0x31, 0x62, 0x40, 0x97,
    0x26, 0xEF, 0x03, 0xAB, 0xF4, 0x19, 0x32, 0x62, 0x01, 0x71, 0x26, 0x47,
    0x31, 0x24, 0x05, 0x6A, 0x12, 0x04, 0x66, 0x03, 0x44, 0x42, 0x0F, 0x78,
    0x33, 0x2B, 0x6C, 0x23, 0xA3, 0xA6, 0x34, 0xCF, 0xB6, 0x05, 0xCF, 0x8B,
    0xAB, 0x63, 0x22, 0xF6, 0x50, 0xD9, 0x3A, 0x97, 0xC6, 0x1E, 0xFE, 0x67,
    0xCC, 0x1C, 0x3D, 0x4A, 0x86, 0xC6, 0x74, 0xC5, 0xD4, 0x74, 0x6A, 0x76,
    0xD1, 0x37, 0xC5, 0x15, 0x6F, 0x62, 0x5F, 0x81, 0x33, 0x5C, 0x77, 0xF2,
    0x3C, 0x14, 0xE6, 0x50, 0x53, 0xD0, 0x67, 0xD8, 0x49, 0x90, 0x11, 0xB1,
    0x99, 0xB9, 0x79, 0x56, 0xA8, 0x79, 0x0F, 0x22, 0x03, 0x63, 0xFA, 0x8A,
    0x2A, 0xFC, 0xAF, 0xA4, 0xE0, 0xA7, 0xC4, 0x0C, 0x58, 0xA2, 0xA4, 0x47,
    0x44, 0x35, 0x49, 0xBE, 0x17, 0xC4, 0x1C, 0x93, 0xB1, 0x87, 0x04, 0x28,
    0xA8, 0x83, 0x67, 0xEE, 0x56, 0x29, 0x26, 0x63, 0xD5, 0x98, 0x3F, 0x42,
    0x9D, 0xDC, 0x91, 0x72, 0x2B, 0x22, 0x21, 0x23, 0xB3, 0x98, 0x60, 0x63,
    0x50, 0x52, 0x51, 0x72, 0x0C, 0x3B, 0xB9, 0x90, 0x92, 0x39, 0x22, 0xA0,
    0xCF, 0x3C, 0x23, 0x32, 0xA0, 0xEA, 0x5C, 0xB0, 0x8A, 0x92, 0x88, 0x15,
    0xC4, 0x8B, 0x79, 0x0E, 0x35, 0x19, 0x39, 0x11, 0x29, 0x25, 0x31, 0x09,
    0x31, 0x39, 0x39, 0x09, 0x31, 0x19, 0x57, 0x18, 0xE9, 0x12, 0x12, 0x13,
    0x80, 0x31, 0x78, 0x7E, 0x1C, 0x3F, 0x37, 0xE7, 0xC7, 0x40, 0x4D, 0x46,
    0x31, 0xA1, 0x1A, 0x22, 0x12, 0x06, 0x94, 0x64, 0x24, 0x44, 0x94, 0xD4,
    0x1D, 0xEA, 0xA8, 0xE6, 0x66, 0x4A, 0xA0, 0x40, 0x33, 0xC4, 0x67, 0xFF,
    0x90, 0x9A, 0xAA, 0x4A, 0x38, 0x85, 0x9D, 0xAC, 0x02, 0x3D, 0x46, 0x94,
    0x0C, 0x66, 0x8A, 0x52, 0x05, 0xCC, 0x91, 0x00, 0x29, 0x17, 0x10, 0x91,
    0x50, 0x12, 0xDB, 0x6C, 0x63, 0x4A, 0x46, 0xF4, 0xE8, 0x53, 0x22, 0x76,
    0xF1, 0xA7, 0xA4, 0xF4, 0x99, 0xA3, 0x64, 0x95, 0x8C, 0xD4, 0x94, 0x77,
    0x80, 0xE7, 0x92, 0xDC, 0x8E, 0x06, 0x16, 0x30, 0x76, 0xF9, 0xFC, 0x67,
    0x5A, 0xB0, 0xD3, 0x94, 0x8A, 0xA6, 0x83, 0x8E, 0x91, 0xF2, 0x19, 0xB1,
    0xFF, 0xDA, 0xE0, 0xAA, 0x0A, 0xB5, 0xA5, 0xA9, 0x87, 0xFA, 0x50, 0xA8,
    0xE3, 0x23, 0xDA, 0xBB, 0x35, 0x5A, 0xA6, 0x6E, 0x3E, 0xFC, 0xE5, 0x0C,
    0x5E, 0x53, 0x77, 0xF4, 0x9E, 0xFF, 0x50, 0x7B, 0x25, 0x7D, 0x29, 0x34,
    0x48, 0xFA, 0x4A, 0xFF, 0xC4, 0x36, 0xD9, 0xDB, 0x61, 0xB1, 0x27, 0xE4,
    0xCB, 0x0A, 0x6D, 0x9F, 0xD9, 0x45, 0xE0, 0x9F, 0x91, 0xDF, 0x63, 0x1B,
    0x4D, 0xDB, 0x4D, 0xB3, 0xA8, 0xBE, 0x76, 0x5F, 0x68, 0x33, 0x2D, 0xCF,
    0x8D, 0xBF, 0xE0, 0xCA, 0x1B, 0x3F, 0x6E, 0xA1, 0x3E, 0x3D, 0x9E, 0x6F,
    0x88, 0x8C, 0xD4, 0xD3, 0x0E, 0x15, 0x96, 0x23, 0x1A, 0x59, 0x2B, 0x84,
    0xAF, 0xF0, 0x0E, 0x25, 0xED, 0x96, 0xCF, 0x2D, 0xB9, 0x67, 0x0D, 0xA6,
    0x17, 0x73, 0x31, 0xE6, 0xF0, 0xCA, 0xA4, 0xBD, 0x37, 0xC1, 0xDC, 0x11,
    0x11, 0x11, 0x47, 0x93, 0xDA, 0xEB, 0x4E, 0xC5, 0x44, 0xA6, 0xE0, 0x9C,
    0x99, 0x8B, 0xA9, 0xF9, 0x7B, 0x6A, 0xB0, 0x7C, 0x80, 0x42, 0xBE, 0x2D,
    0x07, 0xF3, 0xB3, 0xDA, 0x9E, 0x96, 0x80, 0x15, 0x4A, 0x60, 0x38, 0x21,
    0xD9, 0xDE, 0x9A, 0xC3, 0x3F, 0x27, 0xE7, 0x33, 0x24, 0x14, 0x38, 0x7F,
    0x21, 0x22, 0xC5, 0x9B, 0x54, 0xA7, 0xDB, 0x13, 0x40, 0xE4, 0xBC, 0x96,
    0x98, 0x8C, 0x18, 0xE8, 0x91, 0x00, 0x59, 0xF8, 0x6C, 0x0F, 0xF8, 0x26,
    0x11, 0x35, 0x95, 0x89, 0x26, 0x0C, 0xA7, 0x35, 0xD3, 0xE1, 0x50, 0x25,
    0x46, 0xFD, 0xEE, 0x22, 0xC1, 0x6D, 0x16, 0xA7, 0x37, 0x85, 0xE5, 0xD8,
    0x3C, 0xBF, 0x58, 0xB1, 0xFE, 0x52, 0x77, 0x5A, 0x69, 0xB1, 0xD2, 0x28,
    0x34, 0x3F, 0x15, 0xF6, 0x5A, 0x1E, 0xCA, 0xDD, 0xA5, 0x75, 0xE9, 0x37,
    0x54, 0xCE, 0x03, 0xCB, 0x4F, 0x73, 0xC1, 0x48, 0x85, 0x76, 0xEA, 0xED,
    0xA1, 0xB2, 0x93, 0x04, 0x66, 0xF7, 0x35, 0xA2, 0x44, 0x91, 0x2E, 0x99,
    0x29, 0x70, 0x4B, 0x72, 0x5D, 0x01, 0x6B, 0xEE, 0x08, 0xAE, 0x22, 0xAA,
    0x38, 0xAE, 0x11, 0x2E, 0xCB, 0x3A, 0xAD, 0xDA, 0x9E, 0xE4, 0x99, 0xF4,
    0x4C, 0x0D, 0x25, 0x54, 0x60, 0xBE, 0x56, 0xC2, 0x45, 0xFC, 0x7B, 0x7A,
    0xF4, 0xF0, 0x7B, 0x2B, 0x23, 0x62, 0x4A, 0x52, 0x56, 0x99, 0x0B, 0x77,
    0xEF, 0xE6, 0x31, 0x2A, 0x0A, 0x72, 0x4A, 0x04, 0x44, 0x3C, 0x8B, 0xDF,
    0x42, 0xE6, 0x45, 0xFA, 0x1D, 0x9C, 0x93, 0xCA, 0x34, 0x66, 0x44, 0x1F,
    0xB8, 0x9E, 0x57, 0x00, 0xDB, 0x18, 0x51, 0xB0, 0x9D, 0x7D, 0xA4, 0x21,
    0xA2, 0xA8, 0x88, 0xD8, 0xD7, 0xB9, 0x8B, 0xB5, 0x22, 0x46, 0x14, 0x5C,
    0xC2, 0x99, 0xA4, 0x13, 0xBC, 0xD7, 0x31, 0x14, 0x2B, 0x2E, 0x5B, 0xE2,
    0x77, 0xD1, 0x4C, 0xC2, 0x50, 0x47, 0x04, 0x29, 0x4F, 0x14, 0x2B, 0x53,
    0x4F, 0xA8, 0xAF, 0x5F, 0x84, 0xF2, 0x84, 0xD4, 0x94, 0xB5, 0xDD, 0x4F,
    0xEF, 0xE5, 0x3F, 0xA5, 0xC1, 0x78, 0x7E, 0x4D, 0x28, 0xD1, 0x27, 0xE5,
    0xB7, 0xA9, 0x75, 0x81, 0x4B, 0x81, 0xE6, 0xAA, 0xAC, 0xEA, 0x70, 0xAD,
    0x22, 0x25, 0x8A, 0x42, 0x65, 0x30, 0xB3, 0x12, 0xF7, 0x85, 0x5A, 0xB2,
    0xFE, 0x83, 0xE9, 0x19, 0xBB, 0x96, 0x88, 0x75, 0x6C, 0x89, 0x5F, 0x81,
    0xC5, 0x48, 0x84, 0x1E, 0xCB, 0xAE, 0x29, 0xBD, 0xC1, 0xF4, 0x7E, 0x53,
    0xE6, 0xD8, 0xAE, 0x27, 0x24, 0x29, 0x74, 0x7B, 0x36, 0x88, 0x7B, 0x70,
    0x5D, 0x1A, 0x57, 0x04, 0x75, 0x15, 0x5B, 0x73, 0xAA, 0x53, 0x43, 0x7F,
    0xA5, 0xCA, 0x44, 0x60, 0xDA, 0xD6, 0xB4, 0x49, 0xB0, 0xAA, 0x4A, 0x43,
    0x2D, 0xEB, 0x3B, 0xEA, 0x09, 0xF5, 0x14, 0x6B, 0xA0, 0xD8, 0xF4, 0xF7,
    0x43, 0xAD, 0x65, 0x1F, 0x47, 0x3E, 0x57, 0xA9, 0x3F, 0xB4, 0xE0, 0x6C,
    0x8D, 0x32, 0xD9, 0x22, 0xDC, 0x8E, 0x08, 0x5A, 0xBF, 0xEA, 0x98, 0xCE,
    0x67, 0x4D, 0xF7, 0x7B, 0x09, 0xCC, 0x42, 0x87, 0x77, 0x53, 0xCA, 0xAE,
    0xAD, 0x44, 0xE5, 0x96, 0xD1, 0x75, 0xEF, 0x57, 0xFA, 0xA6, 0x71, 0x4C,
    0x7B, 0x12, 0x2E, 0xAA, 0xFB, 0xC4, 0x7E, 0xEA, 0xC3, 0xAE, 0xD2, 0x38,
    0x0A, 0xFB, 0x00, 0x4A, 0xE5, 0x2A, 0x74, 0xA5, 0x9A, 0x3E, 0xFF, 0xBE,
    0xFE, 0x42, 0x92, 0xDB, 0xD5, 0x33, 0x0D, 0xA5, 0x6E, 0xB4, 0xBE, 0x81,
    0x35, 0xA9, 0x7F, 0x7B, 0xCC, 0xC3, 0x26, 0x04, 0x33, 0x9D, 0x8C, 0x97,
    0x40, 0xD0, 0xE7, 0x11, 0x09, 0xA7, 0x32, 0x4F, 0x0C, 0x54, 0x14, 0xD4,
    0xEC, 0x0C, 0x56, 0xA2, 0xB4, 0x94, 0x43, 0x45, 0x9F, 0x8A, 0x91, 0xD9,
    0x85, 0x2A, 0xDC, 0x1B, 0x93, 0x90, 0x32, 0x62, 0x8E, 0x98, 0xF7, 0xF2,
    0x3E, 0x56, 0x49, 0x3B, 0x7C, 0x7A, 0x98, 0x23, 0xA7, 0xA0, 0x47, 0x45,
    0x41, 0x9F, 0x11, 0x09, 0x19, 0x15, 0xAF, 0x61, 0x89, 0x1D, 0xA6, 0x79,
    0x46, 0xBC, 0x11, 0x28, 0x39, 0xAC, 0xC3, 0x2B, 0x2C, 0x10, 0x2F, 0x67,
    0x15, 0x51, 0x9B, 0x55, 0xD8, 0x0F, 0x3C, 0x0C, 0x17, 0x20, 0xB4, 0x12,
    0x1C, 0x8F, 0x69, 0xEA, 0x3F, 0x14, 0x36, 0x1A, 0xB8, 0x3E, 0xA9, 0x23,
    0x25, 0xF9, 0x9C, 0xF0, 0xFB, 0x34, 0xA7, 0x6F, 0xCB, 0x47, 0xEF, 0x6E,
    0xB3, 0x91, 0x8F, 0xE7, 0x97, 0xF5, 0x53, 0x63, 0xFC, 0x36, 0x0F, 0xF8,
    0x12, 0x46, 0xAA, 0x7F, 0xD3, 0xD9, 0x29, 0x5A, 0xB5, 0xB2, 0xFF, 0x3E,
    0x23, 0xE0, 0x9E, 0xB7, 0x22, 0x69, 0x59, 0x5F, 0x53, 0xAC, 0xFF, 0x22,
    0xDF, 0x77, 0xD4, 0x75, 0xFF, 0xC5, 0x56, 0x91, 0x48, 0xD7, 0xA6, 0xFE,
    0x05, 0x44, 0x1F, 0x44, 0xFD, 0xD0, 0xA7, 0xD1, 0x95, 0xE8, 0xAE, 0xAC,
    0xC4, 0xE1, 0xD3, 0x9D, 0x3D, 0xEB, 0xFA, 0xD9, 0xA3, 0x17, 0x2B, 0x13,
    0xFA, 0x82, 0x2D, 0x9D, 0xFF, 0xD9, 0xF4, 0x76, 0xDD, 0x31, 0xD3, 0x6D,
    0x71, 0x2E, 0xCD, 0x82, 0x6E, 0xE9, 0xD8, 0x1E, 0x35, 0x32, 0x19, 0xEE,
    0x16, 0x8D, 0x42, 0xBB, 0xF4, 0x84, 0x09, 0x6B, 0xD3, 0x3D, 0x54, 0x84,
    0xB9, 0x3E, 0x18, 0x94, 0x6D, 0x24, 0xD6, 0x4A, 0xA0, 0x7C, 0x20, 0x4E,
    0xEE, 0x8D, 0x19, 0x51, 0x51, 0x53, 0x5B, 0x62, 0x72, 0x1C, 0x44, 0xCD,
    0x7B, 0x11, 0xD0, 0xA7, 0x20, 0x23, 0x23, 0x67, 0x89, 0x92, 0xDB, 0x38,
    0x82, 0x5B, 0x29, 0xE8, 0xB1, 0x68, 0xB9, 0x81, 0x88, 0x98, 0x9A, 0x88,
    0xC8, 0x99, 0x54, 0xC4, 0xF6, 0x0E, 0x81, 0x4A, 0xAC, 0x30, 0x01, 0x03,
    0x96, 0xF9, 0x17, 0x5C, 0x4D, 0xC4, 0xAA, 0x25, 0x4C, 0xC4, 0x0A, 0xA2,
    0x07, 0x94, 0xA4, 0x96, 0x1E, 0x9B, 0x84, 0x94, 0xED, 0x6C, 0x0F, 0x29,
    0x91, 0x9A, 0x12, 0x91, 0x9A, 0x18, 0x2D, 0x13, 0x73, 0x0A, 0xA2, 0x47,
    0x44, 0x44, 0xC6, 0x60, 0xD2, 0xC7, 0x9F, 0x84, 0xFB, 0xE2, 0xF2, 0x81,
    0x18, 0x42, 0xD0, 0x30, 0x0D, 0x22, 0xE5, 0x77, 0x6D, 0x28, 0x97, 0xD3,
    0x89, 0xB8, 0x92, 0xBF, 0xE1, 0xC5, 0xC0, 0x80, 0x84, 0x9A, 0x1F, 0xB4,
    0x2A, 0xAB, 0x11, 0x4D, 0xBA, 0x24, 0xE2, 0x99, 0x9D, 0xBA, 0xA4, 0x46,
    0x66, 0xDB, 0xB7, 0x23, 0x7E, 0x9F, 0xFF, 0x64, 0x19, 0xBF, 0x88, 0x21,
    0xF3, 0x01, 0xC9, 0x84, 0xBA, 0xB3, 0x82, 0x2C, 0x52, 0x7A, 0x36, 0x1B,
    0x17, 0xF6, 0xAC, 0x52, 0x31, 0x22, 0x65, 0xC4, 0x3C, 0x57, 0x72, 0x03,
    0x7D, 0x46, 0x88, 0x98, 0xBC, 0x93, 0x9C, 0x63, 0xF0, 0x00, 0x1C, 0x9D,
    0x28, 0xD3, 0x83, 0x6A, 0xBA, 0x7A, 0x26, 0x65, 0x5F, 0xBA, 0x45, 0xBE,
    0xA1, 0xAC, 0xE9, 0xAF, 0x4C, 0x34, 0x30, 0x26, 0x3B, 0x3C, 0xF4, 0x05,
    0xB4, 0x2B, 0xFE, 0xCE, 0x8E, 0x74, 0x87, 0x48, 0xFD, 0x10, 0x84, 0xC4,
    0xEA, 0x29, 0x16, 0xBA, 0xCE, 0x76, 0x6C, 0x3A, 0x4D, 0xBF, 0x64, 0xB5,
    0x82, 0xAE, 0x92, 0x65, 0x6E, 0x9E, 0x81, 0xDF, 0xCD, 0xE7, 0x3C, 0xC8,
    0xB2, 0xD5, 0x4A, 0x93, 0x99, 0x9F, 0xBF, 0x0E, 0xCD, 0x7F, 0x74, 0x1C,
    0x3F, 0x59, 0x21, 0x96, 0x83, 0x57, 0x36, 0x09, 0x11, 0xE2, 0x78, 0xA3,
    0x8A, 0xA3, 0x7F, 0x64, 0x91, 0xF3, 0x10, 0x91, 0x11, 0xDB, 0x5E, 0x81,
    0xDA, 0x3E, 0x11, 0xE3, 0x6C, 0x88, 0xCB, 0xDC, 0x6C, 0x9B, 0x7A, 0xDE,
    0x1C, 0x05, 0x25, 0x62, 0xC8, 0x1C, 0x19, 0x29, 0x39, 0x29, 0x03, 0x7E,
    0x87, 0xFF, 0xC1, 0x13, 0x44, 0xF4, 0x29, 0x48, 0x58, 0xB0, 0xEC, 0x0C,
    0x1D, 0xCC, 0x9B, 0x59, 0xE6, 0x21, 0xB1, 0x71, 0x52, 0x08, 0xB9, 0xBC,
    0xF7, 0x92, 0x10, 0x53, 0x98, 0x9F, 0x1F, 0xAD, 0x9D, 0x7A, 0x7B, 0x92,
    0x14, 0x84, 0x6E, 0x0C, 0xD4, 0x9B, 0xA6, 0x7E, 0x2D, 0xE9, 0xED, 0xE6,
    0xF5, 0xB7, 0xCF, 0xD0, 0x68, 0xB8, 0xC1, 0x6F, 0x36, 0x6D, 0x76, 0x58,
    0x56, 0x76, 0xFD, 0xCE, 0x8C, 0x75, 0xDF, 0x16, 0xFE, 0x4A, 0x6D, 0xF7,
    0x07, 0x42, 0xD7, 0xD8, 0x13, 0x56, 0x34, 0x0A, 0xFD, 0x1E, 0x5D, 0xAA,
    0xB8, 0x6C, 0xCD, 0xCC, 0xB9, 0x58, 0x85, 0x6A, 0xDD, 0x60, 0x9B, 0xA6,
    0xFA, 0x9A, 0x57, 0x7F, 0xE6, 0x11, 0x59, 0x63, 0x17, 0x71, 0x09, 0x57,
    0x45, 0xFC, 0x34, 0x50, 0x77, 0x5A, 0xD6, 0x22, 0x96, 0xF8, 0x0F, 0x26,
    0x69, 0x4E, 0x6E, 0x53, 0x5C, 0x62, 0xAA, 0xC4, 0xF9, 0xFB, 0x4B, 0x21,
    0x8D, 0x14, 0x5B, 0xF4, 0x50, 0x13, 0x13, 0x13, 0x77, 0xF4, 0x10, 0xC1,
    0x61, 0x38, 0x25, 0x95, 0xD0, 0x07, 0x2A, 0x56, 0xE8, 0xDB, 0x3B, 0xAF,
    0xE5, 0x45, 0x3C, 0x08, 0xCC, 0x11, 0x59, 0xB2, 0x73, 0x5A, 0xF5, 0xD5,
    0xC6, 0x5B, 0x18, 0xAF, 0xE6, 0xCC, 0x93, 0x13, 0x11, 0x71, 0x22, 0x3F,
    0xE7, 0x5D, 0x88, 0x11, 0x2B, 0xE4, 0x8C, 0x20, 0x3C, 0x77, 0x06, 0x5C,
    0x05, 0x31, 0x44, 0x57, 0x8B, 0x1B, 0x28, 0x28, 0x3B, 0xF3, 0xAA, 0x00,
    0xDB, 0x78, 0x11, 0x25, 0x11, 0x19, 0xA5, 0x31, 0x5D, 0x69, 0x8E, 0x8F,
    0x0B, 0x6E, 0x96, 0x48, 0xC8, 0x28, 0x18, 0xB5, 0x92, 0x89, 0x02, 0x72,
    0x8E, 0x9E, 0x7A, 0x56, 0xCC, 0x5E, 0x63, 0xCB, 0x8A, 0x9C, 0x04, 0x11,
    0x59, 0x20, 0x9A, 0x50, 0x71, 0x3B, 0x2F, 0xE0, 0xAB, 0x88, 0x04, 0x57,
    0xB4, 0xEE, 0x6A, 0x9E, 0x49, 0x48, 0x5A, 0xE3, 0xF4, 0xA8, 0x88, 0x49,
    0x10, 0xE2, 0x9F, 0xF2, 0x71, 0xEE, 0xE2, 0xF7, 0x70, 0xAA, 0x37, 0x66,
    0x75, 0xFF, 0xEC, 0x7F, 0xB5, 0xFB, 0xF5, 0xD2, 0x48, 0x58, 0x93, 0xF1,
    0x34, 0x38, 0x47, 0xA6, 0xD4, 0x27, 0x5B, 0xCC, 0x94, 0x9A, 0x5D, 0x4D,
    0xEC, 0xF7, 0xC3, 0xE6, 0xEC, 0x96, 0x41, 0x00, 0x7C, 0x0C, 0xF0, 0xB5,
    0xB5, 0xD5, 0x4F, 0x10, 0xA1, 0xCC, 0xFE, 0x6D, 0x53, 0xAC, 0x3B, 0xD4,
    0x24, 0x2F, 0x36, 0x06, 0xB5, 0x5C, 0x3F, 0x99, 0xEF, 0x0F, 0xF1, 0x25,
    0x59, 0x7F, 0xE0, 0x45, 0xEB, 0x7A, 0x29, 0x00, 0xF3, 0xDB, 0x11, 0xBA,
    0x4E, 0xEA, 0x1C, 0xCE, 0x07, 0x43, 0x4F, 0x9A, 0xCE, 0x9F, 0x33, 0xDF,
    0xAD, 0xAD, 0x5B, 0xEF, 0x9B, 0xE8, 0x01, 0x6D, 0x4E, 0x60, 0xF8, 0xFB,
    0x35, 0x91, 0xF7, 0x27, 0xB7, 0x79, 0x47, 0xC5, 0x39, 0x44, 0xA9, 0xFE,
    0x6A, 0x66, 0xE3, 0xE4, 0xDA, 0x50, 0x4A, 0xFA, 0x6E, 0x70, 0xAF, 0x5C,
    0x2B, 0x73, 0x7F, 0x5A, 0x13, 0x6C, 0xF7, 0x0C, 0xB5, 0x1B, 0x9D, 0x15,
    0xFA, 0x6F, 0x27, 0x15, 0x8D, 0xE4, 0x3C, 0xB1, 0xBF, 0xB3, 0xD5, 0xCB,
    0xCC, 0x69, 0x6D, 0x36, 0x8A, 0xFD, 0x7C, 0x0C, 0x7D, 0x1F, 0xFC, 0x56,
    0x92, 0xAE, 0x5F, 0x13, 0xFD, 0x81, 0x21, 0xDE, 0x33, 0x4E, 0x88, 0xD4,
    0xD3, 0x82, 0x8D, 0xF2, 0xB3, 0x99, 0x8D, 0xD3, 0xB3, 0x21, 0x6F, 0x95,
    0xD9, 0xDA, 0xAD, 0xF0, 0x4D, 0xB8, 0x65, 0xD7, 0xEE, 0x20, 0x04, 0xD1,
    0x47, 0x7A, 0x5A, 0xD0, 0xFD, 0x9D, 0xAB, 0xED, 0x33, 0x34, 0xB9, 0x86,
    0x3A, 0xDB, 0xF2, 0x2F, 0x0B, 0x41, 0x00, 0x9C, 0x33, 0x7C, 0xDB, 0x58,
    0xB6, 0xA0, 0x8D, 0xFE, 0xCF, 0xD6, 0xC1, 0xFC, 0x73, 0xEA, 0x2B, 0x36,
    0x2F, 0x22, 0xB3, 0x65, 0x98, 0x57, 0xA4, 0x3B, 0x66, 0xB8, 0xBD, 0x6B,
    0x33, 0x7F, 0xA5, 0xCA, 0x78, 0xA7, 0xD0, 0xE5, 0x72, 0x4D, 0xB4, 0xF3,
    0x66, 0x15, 0xC2, 0xB8, 0x1F, 0x09, 0xE8, 0xCF, 0xBF, 0x0C, 0xA1, 0x8F,
    0x74, 0x3E, 0x6E, 0xD4, 0xDA, 0x2D, 0x5D, 0xE9, 0xDF, 0xD9, 0x63, 0xDC,
    0x96, 0x22, 0xBF, 0x2F, 0xF3, 0x26, 0x39, 0x63, 0x37, 0x7D, 0x0C, 0xC9,
    0x83, 0x6B, 0x22, 0x9F, 0x04, 0x4D, 0xE2, 0x53, 0x5B, 0x99, 0xD0, 0x0D,
    0xDA, 0xDC, 0x76, 0x79, 0xC7, 0xFA, 0x2E, 0x10, 0xF6, 0x2D, 0xBA, 0x43,
    0x5D, 0xA8, 0x8E, 0x56, 0xA9, 0x97, 0x35, 0x3A, 0x70, 0xB0, 0xA0, 0x54,
    0x91, 0xEE, 0x98, 0xF9, 0xC0, 0x55, 0xE5, 0x2A, 0x55, 0xAA, 0xD0, 0xA9,
    0x42, 0x0B, 0xCA, 0xCC, 0x5B, 0x73, 0x08, 0x7C, 0x6F, 0x02, 0xFD, 0xC6,
    0xF3, 0x7B, 0x72, 0x1D, 0xD4, 0x77, 0xF4, 0xF7, 0xCC, 0x79, 0x82, 0x6E,
    0xB1, 0xBB, 0xFD, 0x56, 0xA7, 0x8D, 0x41, 0x73, 0x18, 0x8A, 0xB4, 0x1C,
    0x76, 0x1C, 0xED, 0xD2, 0x27, 0x85, 0xFA, 0xED, 0x5C, 0xEF, 0xD8, 0xCE,
    0xEE, 0x1D, 0xB1, 0x22, 0x1D, 0xD7, 0xA9, 0x69, 0x77, 0x49, 0x6A, 0xCE,
    0xD7, 0x90, 0x3E, 0x17, 0xD6, 0xB1, 0x6F, 0x9C, 0x70, 0xB5, 0xDA, 0xE9,
    0xAE, 0x36, 0xFA, 0xA3, 0x35, 0x51, 0xCF, 0xE4, 0x9D, 0xE8, 0x44, 0xEF,
    0xD1, 0x03, 0xF2, 0x79, 0xFB, 0x95, 0xD0, 0xE9, 0xBD, 0x51, 0x58, 0xD2,
    0x8A, 0xBC, 0xF0, 0x95, 0x6A, 0xF6, 0x9F, 0x3D, 0xA0, 0xF7, 0x37, 0xE3,
    0xEE, 0x18, 0x33, 0x81, 0xBD, 0x93, 0xDD, 0x16, 0x91, 0x8B, 0xA7, 0x1E,
    0xE6, 0x9A, 0x94, 0x6A, 0xEB, 0xD1, 0x76, 0x4A, 0xF0, 0x76, 0x25, 0x26,
    0x47, 0x4E, 0x0C, 0x2E, 0x0F, 0x94, 0x2F, 0x6C, 0x28, 0x85, 0xC5, 0x5A,
    0x5B, 0xF3, 0x0F, 0x14, 0x29, 0xD3, 0x45, 0x5A, 0x94, 0xB4, 0x3A, 0x71,
    0x4C, 0xCD, 0x66, 0xCF, 0x0A, 0xA9, 0x43, 0xBE, 0xA0, 0xF1, 0x48, 0xA5,
    0x5C, 0xF7, 0xF8, 0x71, 0x4F, 0x1E, 0x77, 0x01, 0x16, 0xFC, 0x74, 0xEE,
    0x68, 0x25, 0x21, 0xAB, 0x8E, 0xE1, 0x9D, 0x42, 0x19, 0xE9, 0xFF, 0xB4,
    0xD2, 0xD0, 0x17, 0xD9, 0xC0, 0x5D, 0x21, 0xD3, 0xCB, 0xD4, 0x24, 0xC8,
    0xBD, 0x9F, 0xE0, 0x96, 0xDA, 0x3B, 0xBB, 0x6F, 0xD3, 0x77, 0xAD, 0xC0,
    0xB1, 0x3E, 0x56, 0x77, 0x81, 0x55, 0x53, 0x95, 0x2A, 0x5A, 0x5B, 0x99,
    0xD7, 0x7E, 0xC2, 0xAA, 0xDE, 0xA8, 0x9E, 0xD2, 0xA9, 0x24, 0xF1, 0x65,
    0xDE, 0x10, 0x3D, 0x62, 0xA6, 0x63, 0xA4, 0xD9, 0x6D, 0xAE, 0x52, 0xA5,
    0x65, 0x5D, 0x2D, 0xB7, 0x51, 0xF9, 0x53, 0xA6, 0x67, 0xCB, 0x8E, 0xE5,
    0x7A, 0x8F, 0xDA, 0x11, 0xC2, 0x40, 0xA9, 0xE2, 0xD6, 0x49, 0x0D, 0x97,
    0xEB, 0x49, 0x9B, 0x78, 0xD1, 0xEA, 0xF3, 0x5C, 0x9B, 0xC2, 0x4B, 0x6A,
    0x84, 0x2C, 0x37, 0xBD, 0x93, 0xAF, 0x53, 0x54, 0x2A, 0xBD, 0x63, 0xB2,
    0xA1, 0x1D, 0x38, 0xB1, 0x61, 0x47, 0xBF, 0x99, 0xA4, 0xEB, 0x71, 0x79,
    0x08, 0x36, 0xDD, 0x9E, 0xBC, 0xAF, 0x2B, 0x15, 0x46, 0xFB, 0xAE, 0x8D,
    0x6D, 0xFF, 0xD3, 0x90, 0x9F, 0x1B, 0x3B, 0xB0, 0xE2, 0x0F, 0x74, 0xB9,
    0x7E, 0x29, 0xEF, 0x54, 0x35, 0xD9, 0x9A, 0xB5, 0xBD, 0xBC, 0x65, 0xF9,
    0xBD, 0xE4, 0xBE, 0xA0, 0xE2, 0xFE, 0x76, 0x8C, 0xBE, 0xF6, 0xFD, 0x85,
    0xA4, 0xA2, 0x23, 0x14, 0x49, 0xBC, 0x1E, 0x1F, 0xE8, 0x3F, 0x6A, 0x79,
    0x62, 0x5A, 0x93, 0x4B, 0x30, 0x34, 0x46, 0x72, 0x70, 0xBD, 0x9C, 0x96,
    0xED, 0x62, 0xBE, 0xAF, 0xB5, 0x8E, 0x16, 0x1B, 0xE8, 0x64, 0x5D, 0xA2,
    0x9B, 0xC3, 0xF9, 0x1B, 0x45, 0xB0, 0x15, 0xD5, 0xCC, 0xB1, 0xA6, 0x61,
    0xB7, 0x6A, 0x95, 0xBA, 0x4A, 0x1A, 0xCB, 0x0A, 0x14, 0xAA, 0x66, 0xC6,
    0x88, 0x53, 0xD0, 0x59, 0x88, 0x3E, 0xAB, 0xF1, 0xE7, 0x3F, 0x3A, 0xB3,
    0xC1, 0x79, 0x14, 0x0A, 0x1B, 0x7E, 0xCB, 0x60, 0x7B, 0x03, 0xD2, 0xF4,
    0xDE, 0xAE, 0x6F, 0x0A, 0x7D, 0x42, 0x7F, 0xAB, 0xEF, 0xEB, 0x11, 0xFB,
    0xEC, 0xA8, 0xB5, 0xAB, 0x53, 0x52, 0xCB, 0x60, 0xAE, 0x47, 0xFA, 0x97,
    0x55, 0x48, 0xFA, 0xB4, 0xD0, 0x4B, 0xF4, 0xB8, 0xFC, 0x8E, 0xF0, 0x25,
    0x75, 0x9D, 0x15, 0xD9, 0x0D, 0x75, 0xD7, 0x56, 0x26, 0xE0, 0x08, 0xA7,
    0xA0, 0xDC, 0xA1, 0xD1, 0xE7, 0xD9, 0xC9, 0x59, 0x5D, 0xD0, 0xEC, 0xE2,
    0x72, 0x75, 0xD5, 0x42, 0xCD, 0x86, 0xF3, 0x49, 0xF0, 0x07, 0x1A, 0x36,
    0x7F, 0xBB, 0xA5, 0xAB, 0x02, 0xDA, 0xAE, 0x3A, 0x58, 0x6D, 0x40, 0xCB,
    0x7F, 0x2B, 0xD8, 0x8D, 0xFF, 0x17, 0x88, 0xB4, 0x4F, 0x5A, 0x17, 0xF5,
    0x0B, 0x5D, 0x78, 0xC4, 0xAC, 0x10, 0xF0, 0x7C, 0x4C, 0x47, 0xCF, 0x09,
    0x7D, 0xA4, 0x73, 0x42, 0x23, 0xA3, 0xF0, 0xC8, 0xEA, 0xE8, 0x6E, 0xBF,
    0xA7, 0xDF, 0x69, 0xDF, 0xB5, 0xA7, 0xD7, 0x6D, 0x47, 0xDC, 0xD3, 0xF2,
    0x0C, 0xDC, 0x62, 0xAC, 0x18, 0xFF, 0x34, 0x5E, 0x42, 0xB9, 0x0E, 0xE5,
    0x35, 0xD4, 0x2D, 0xB6, 0xA3, 0xD7, 0x35, 0xAB, 0xBD, 0x5F, 0x7B, 0xED,
    0x0C, 0xA8, 0x5C, 0xEA, 0xDC, 0x8C, 0x35, 0x01, 0x33, 0xB7, 0x31, 0xC2,
    0x51, 0xC8, 0x67, 0xE2, 0x53, 0xA1, 0xDF, 0xED, 0x0C, 0x39, 0x5C, 0xAE,
    0xCD, 0x1F, 0x3C, 0xE7, 0x8F, 0x1A, 0xF6, 0x35, 0x99, 0xAE, 0x4F, 0xFB,
    0x33, 0x3A, 0x1C, 0x2C, 0x4F, 0xBC, 0xDE, 0xF6, 0x18, 0xD7, 0x86, 0x87,
    0x15, 0x09, 0x1D, 0x2E, 0xBF, 0xA7, 0x04, 0x25, 0xBA, 0xC9, 0x16, 0x76,
    0x3D, 0x4F, 0xD9, 0xBB, 0x9F, 0x4D, 0xAC, 0x56, 0xF4, 0x68, 0x5F, 0xDF,
    0x0E, 0xCA, 0xA5, 0x7D, 0x1A, 0xA3, 0xA3, 0xE1, 0xE6, 0x4E, 0x71, 0xDA,
    0x18, 0xF8, 0xB1, 0x4B, 0x6B, 0x7E, 0xEF, 0x0E, 0x98, 0x3F, 0x1A, 0x8A,
    0x21, 0x6E, 0xB6, 0x8E, 0x6C, 0x7B, 0xC3, 0x5C, 0x3D, 0x69, 0x8A, 0x2F,
    0xB0, 0x5F, 0x78, 0xF6, 0xF4, 0xE3, 0xDF, 0xAC, 0xBB, 0x82, 0x29, 0xAC,
    0x43, 0x15, 0xE7, 0x50, 0x81, 0x8B, 0xDE, 0x86, 0xB6, 0x10, 0x27, 0x4F,
    0xA1, 0x9F, 0xCA, 0xA7, 0x31, 0x6E, 0x6F, 0x99, 0xBD, 0x49, 0xB5, 0xFA,
    0xA8, 0xFE, 0xD8, 0xD5, 0x94, 0xD6, 0xD8, 0xC0, 0x8E, 0x6D, 0xDA, 0x6A,
    0x5D, 0xF3, 0x42, 0x7F, 0xA0, 0x1F, 0xAB, 0x1E, 0x2B, 0x2C, 0xAD, 0x86,
    0xDD, 0x9D, 0x5B, 0x0B, 0x8D, 0x9D, 0x29, 0xF5, 0xE1, 0x19, 0x51, 0x83,
    0x0F, 0x64, 0xCE, 0xD6, 0xE3, 0x76, 0x57, 0x6E, 0x0A, 0xD1, 0x79, 0x08,
    0x57, 0x9A, 0xDB, 0xF5, 0xD7, 0x6B, 0x1D, 0x5F, 0xE0, 0xF5, 0xFF, 0x64,
    0x50, 0xEA, 0x3C, 0xB7, 0x1D, 0xC6, 0x4E, 0xFB, 0x26, 0x26, 0xB7, 0x95,
    0xE0, 0x75, 0x44, 0xA1, 0x2F, 0xDB, 0xBE, 0x90, 0x49, 0xEE, 0x4C, 0x95,
    0x2A, 0x0A, 0x75, 0x87, 0x3F, 0xD3, 0xE3, 0xAA, 0x25, 0x7D, 0x5F, 0xEF,
    0x56, 0xA6, 0x48, 0x6F, 0x95, 0x4F, 0xCB, 0x65, 0xEB, 0x39, 0xBC, 0x02,
    0x38, 0x63, 0x3A, 0x22, 0x77, 0xE9, 0xED, 0x81, 0xFA, 0xFA, 0x6B, 0xED,
    0x95, 0x0B, 0x46, 0x3C, 0x43, 0x6E, 0x35, 0xAC, 0xAA, 0x94, 0x74, 0xE3,
    0xCC, 0x7A, 0x5D, 0x13, 0x7D, 0x66, 0xF6, 0x1D, 0x10, 0x1F, 0xD3, 0x5B,
    0xEC, 0xD3, 0x99, 0x7C, 0x4F, 0x5A, 0xAA, 0xE8, 0x8C, 0xF5, 0x20, 0x0F,
    0x09, 0x8F, 0x8E, 0x53, 0xDE, 0x6D, 0xFE, 0x3C, 0x3C, 0xBC, 0x76, 0xD1,
    0x58, 0x5D, 0x67, 0xAB, 0xA1, 0x94, 0x74, 0x9F, 0x05, 0xC5, 0x71, 0x27,
    0x67, 0x46, 0xDA, 0xA6, 0xC8, 0x4E, 0xF4, 0x88, 0x02, 0x57, 0x2C, 0x58,
    0xE2, 0x34, 0x12, 0x1A, 0xAC, 0xFF, 0xE0, 0x1A, 0xE0, 0x84, 0x71, 0xD5,
    0x42, 0x38, 0xFC, 0xC3, 0x05, 0x2B, 0xA9, 0xD0, 0x65, 0xD2, 0xBA, 0x43,
    0x94, 0x03, 0x45, 0xFE, 0x29, 0xCD, 0x09, 0xDB, 0xF5, 0xDB, 0x45, 0x7D,
    0x5F, 0x3C, 0x77, 0xBF, 0x17, 0xEC, 0xB5, 0x06, 0x83, 0x79, 0xA1, 0xED,
    0x1B, 0x3A, 0xBA, 0xF0, 0xDC, 0xB6, 0x74, 0xF9, 0x6F, 0x4D, 0x69, 0xDA,
    0x5B, 0x12, 0x1D, 0x26, 0xF4, 0x8F, 0x87, 0x80, 0xF6, 0xB5, 0x4A, 0xBD,
    0x49, 0x13, 0x47, 0x10, 0x4D, 0x48, 0xBF, 0x63, 0xF3, 0x41, 0x40, 0x3B,
    0x0D, 0x95, 0xA8, 0xD4, 0xEA, 0xFC, 0xF1, 0x46, 0x0E, 0xAD, 0x02, 0x7A,
    0x3C, 0xB5, 0xBF, 0xFC, 0x0C, 0xD6, 0x6D, 0x73, 0xBC, 0xEE, 0x96, 0xF7,
    0xFF, 0x47, 0xFB, 0xF5, 0xB9, 0xFD, 0xA1, 0x25, 0xB2, 0x26, 0x37, 0x8D,
    0x45, 0x79, 0x75, 0xA8, 0x33, 0x34, 0xDA, 0x24, 0x97, 0xB4, 0xA4, 0x5C,
    0x7F, 0xD1, 0xA2, 0xF2, 0x7A, 0x52, 0x67, 0x1D, 0xD7, 0x46, 0x8F, 0x2C,
    0x03, 0x8E, 0x9B, 0xF5, 0x30, 0xC7, 0x03, 0x03, 0x4B, 0x77, 0x46, 0xBA,
    0x4F, 0x3E, 0x41, 0xD5, 0x55, 0x93, 0x75, 0x47, 0x0A, 0x35, 0xBB, 0x2C,
    0x1B, 0xB7, 0xD4, 0x19, 0xD1, 0xA1, 0xEE, 0xD4, 0x39, 0xF6, 0xCA, 0x3E,
    0x35, 0x67, 0x2F, 0x95, 0x72, 0x27, 0x73, 0x5E, 0x19, 0x04, 0xB0, 0xA9,
    0x05, 0x6E, 0xF8, 0xDA, 0xE8, 0x81, 0x75, 0x00, 0x9C, 0x3E, 0x1B, 0xFD,
    0xF6, 0x69, 0x9A, 0x1F, 0x0F, 0x6C, 0xDA, 0x55, 0x27, 0x50, 0xA0, 0x68,
    0x13, 0xE7, 0xAD, 0xDA, 0x21, 0x25, 0xF7, 0xE8, 0x0A, 0x3B, 0x92, 0xF2,
    0x41, 0xD5, 0xDA, 0x6B, 0x14, 0x5F, 0xD4, 0x37, 0x74, 0x99, 0x7E, 0xA8,
    0x15, 0x49, 0x57, 0x29, 0x55, 0x5F, 0xDB, 0xE4, 0x33, 0xB5, 0xEB, 0xFE,
    0xF6, 0x8E, 0xF6, 0xB5, 0x99, 0xE3, 0x0A, 0x01, 0xB8, 0xA4, 0x4B, 0xD2,
    0x1A, 0x45, 0xE3, 0xCE, 0x71, 0x49, 0x83, 0xB7, 0x55, 0x77, 0x78, 0xFD,
    0x95, 0x31, 0xB1, 0x3B, 0xF6, 0x48, 0xC6, 0xF4, 0xBB, 0x75, 0xAD, 0x5E,
    0x1B, 0x16, 0x73, 0xA0, 0x2F, 0x85, 0xCF, 0xDF, 0x65, 0x62, 0xE5, 0xCF,
    0xF6, 0x68, 0x9A, 0x61, 0xB6, 0x89, 0xCD, 0xA0, 0xBF, 0xD9, 0xC3, 0x2A,
    0x81, 0x01, 0x8B, 0xDD, 0xF4, 0x6F, 0xB2, 0x76, 0xAE, 0xA5, 0xD9, 0xFB,
    0xD7, 0xDD, 0xC7, 0x19, 0xF8, 0xE3, 0xC9, 0x5C, 0x8A, 0xE3, 0x11, 0x7D,
    0xDE, 0x8E, 0x95, 0x4E, 0x5A, 0xA5, 0xA7, 0x7B, 0x8D, 0xE1, 0xFF, 0xB5,
    0xE9, 0xEE, 0xE6, 0x88, 0xD2, 0xED, 0xF6, 0x99, 0xD8, 0x8A, 0xEC, 0x1B,
    0xBA, 0x0E, 0xE4, 0xA8, 0x52, 0xE0, 0xC8, 0x6E, 0xD6, 0x8F, 0x5B, 0x95,
    0xB9, 0x38, 0xC8, 0x73, 0x37, 0xF3, 0x0F, 0x5B, 0x11, 0xF9, 0x2E, 0x73,
    0x5C, 0xB3, 0xD6, 0x17, 0x51, 0x25, 0x76, 0x9E, 0xC3, 0xB7, 0xF4, 0x7D,
    0xBD, 0x77, 0xEC, 0xB8, 0xDA, 0x2C, 0x7C, 0xA6, 0xBF, 0x76, 0x7F, 0x6E,
    0xF7, 0x75, 0xC0, 0x07, 0xD6, 0x9F, 0x30, 0xFE, 0xC0, 0x86, 0x02, 0xB1,
    0x12, 0xDB, 0x17, 0xFF, 0x84, 0x46, 0xCA, 0x67, 0xA4, 0x3B, 0xA4, 0x07,
    0xB4, 0x28, 0x97, 0x1F, 0xB8, 0xB6, 0x75, 0x28, 0x2D, 0x46, 0xDD, 0xC6,
    0x95, 0xE9, 0x19, 0xB2, 0xEE, 0x78, 0x8C, 0xAC, 0x35, 0x4A, 0xD3, 0x87,
    0xBF, 0xC1, 0x45, 0x38, 0xE0, 0x63, 0x8A, 0x01, 0x5E, 0x35, 0xFE, 0xD0,
    0xCC, 0x76, 0x4D, 0x37, 0xDC, 0x70, 0x63, 0x90, 0xFD, 0xAE, 0x26, 0xD5,
    0xC7, 0x14, 0xE9, 0x9D, 0xFA, 0xD3, 0x31, 0x71, 0xE9, 0x2B, 0x32, 0xC4,
    0x93, 0xF0, 0x94, 0x24, 0x20, 0x3C, 0x7E, 0x4A, 0x44, 0xD4, 0x4A, 0x6F,
    0x6C, 0xE8, 0x3A, 0x18, 0x87, 0x54, 0x03, 0x76, 0x44, 0x79, 0xF7, 0x95,
    0x0A, 0x7D, 0x3D, 0x68, 0xF6, 0x2E, 0xAD, 0x5F, 0x69, 0xFC, 0x04, 0xE6,
    0x43, 0x74, 0xAD, 0xEB, 0x88, 0xF2, 0xF5, 0x6D, 0xBC, 0xDB, 0xC1, 0x1B,
    0x67, 0xBD, 0x55, 0xD2, 0xE3, 0x6E, 0xDC, 0x31, 0x04, 0x05, 0xCB, 0x53,
    0xEF, 0x47, 0xC4, 0xFC, 0x09, 0x25, 0x90, 0x75, 0xEE, 0x05, 0xDA, 0x22,
    0x78, 0xE3, 0x44, 0x19, 0xEB, 0x80, 0x61, 0x06, 0x07, 0x64, 0x8A, 0x94,
    0x4A, 0x1A, 0xCD, 0xCC, 0xB3, 0xD5, 0xFA, 0x73, 0xF5, 0xAC, 0x11, 0xFD,
    0x10, 0xD1, 0xFF, 0x60, 0x7F, 0x3D, 0x01, 0x00, 0x27, 0x75, 0x0F, 0xE6,
    0x76, 0x83, 0xB8, 0xB2, 0x48, 0x57, 0x00, 0x5C, 0xE9, 0x2B, 0x66, 0x25,
    0x0E, 0x11, 0xF2, 0x27, 0x6D, 0x15, 0x4B, 0xBD, 0xA8, 0x0B, 0xF9, 0x54,
    0xEE, 0xE0, 0xC8, 0x7D, 0xEA, 0x0E, 0x80, 0x4B, 0xFD, 0x40, 0x7E, 0x23,
    0xD4, 0xA6, 0xBC, 0xB6, 0x8D, 0x5D, 0x1B, 0xFA, 0x6A, 0x92, 0x8D, 0x6D,
    0xBA, 0xBD, 0x8D, 0xA3, 0x78, 0x6C, 0xFC, 0x25, 0xB7, 0xC9, 0xF1, 0x1E,
    0x60, 0x5B, 0xE7, 0xE3, 0x5C, 0x37, 0x70, 0x46, 0x42, 0x82, 0x36, 0x38,
    0xDC, 0x86, 0xE1, 0x31, 0x8E, 0xE2, 0xB6, 0xAD, 0x43, 0x1F, 0x16, 0x79,
    0x3E, 0x5F, 0x1C, 0x47, 0x6F, 0x0E, 0xF8, 0x19, 0xB0, 0x4C, 0xDE, 0xD9,
    0x15, 0x9A, 0xB0, 0x87, 0xC2, 0x5A, 0xE1, 0xB6, 0xF4, 0x4B, 0x56, 0xBF,
    0xC8, 0xF3, 0x67, 0x1C, 0x27, 0x71, 0x90, 0xA1, 0x95, 0x0E, 0xEB, 0xCB,
    0x39, 0x23, 0x5F, 0x0A, 0xE7, 0xB8, 0x4E, 0x3B, 0xBD, 0xAF, 0xB4, 0xF3,
    0x97, 0x06, 0x5B, 0xC9, 0xF4, 0x9B, 0x0E, 0x6C, 0x36, 0x03, 0x2F, 0x64,
    0xB7, 0x1B, 0xB6, 0xD1, 0xE7, 0x1F, 0x56, 0x73, 0xB6, 0x6F, 0xFB, 0x1B,
    0x78, 0x1E, 0x0C, 0xC7, 0x85, 0x6D, 0xD2, 0x71, 0x5D, 0xFB, 0x3A, 0x94,
    0x5F, 0x49, 0x66, 0x90, 0x71, 0x8E, 0x1B, 0x7C, 0x5E, 0xFE, 0x24, 0x87,
    0x3B, 0x82, 0xF3, 0x93, 0x07, 0xF4, 0x73, 0xDB, 0x95, 0xE9, 0x8F, 0x19,
    0xDE, 0x82, 0xEB, 0x9C, 0xAD, 0x56, 0x29, 0xB3, 0xE0, 0x78, 0x76, 0x36,
    0x27, 0xF8, 0xCD, 0xA9, 0x6F, 0x47, 0x4E, 0xFA, 0x6A, 0xDD, 0xAA, 0x99,
    0x3D, 0x87, 0xFE, 0x96, 0x98, 0xBD, 0xA7, 0xEB, 0xEB, 0x08, 0x0D, 0xE2,
    0xE8, 0xAD, 0xB4, 0x3A, 0x3C, 0xCF, 0x08, 0xC6, 0xCF, 0x7D, 0x5D, 0xC1,
    0x8A, 0xA4, 0xB3, 0x94, 0x84, 0x6F, 0x65, 0x38, 0xC8, 0x86, 0xEF, 0xAD,
    0x4F, 0x17, 0xDD, 0x5B, 0x70, 0xF8, 0x02, 0x1F, 0x4C, 0x4C, 0x0C, 0x32,
    0x7D, 0x5C, 0x2E, 0xEB, 0xE7, 0x4F, 0x5E, 0xAE, 0xF4, 0x5B, 0xE1, 0xAB,
    0x46, 0x0E, 0x2A, 0xFB, 0x1F, 0x94, 0xAF, 0x22, 0x3D, 0x58, 0xF0, 0x8C,
    0xB9, 0x73, 0xBD, 0x84, 0x7F, 0x55, 0xE3, 0x47, 0x8F, 0xD3, 0x4A, 0x8E,
    0x6C, 0x32, 0x57, 0x37, 0x79, 0xFD, 0x5A, 0x7D, 0x11, 0xAD, 0x41, 0x6A,
    0x5F, 0x43, 0x3C, 0xAF, 0x3B, 0x43, 0xA3, 0xC9, 0xD0, 0xD0, 0x9F, 0xBD,
    0x01, 0x7E, 0xC3, 0xD7, 0xAF, 0xE5, 0xD7, 0x10, 0x07, 0xE8, 0xBD, 0x9A,
    0xEB, 0x69, 0xE5, 0x7E, 0xEA, 0x70, 0x2A, 0xEF, 0x01, 0x87, 0x3C, 0xBF,
    0xE6, 0x5F, 0x42, 0x1D, 0x20, 0x7D, 0xD6, 0x75, 0x67, 0x6A, 0xD1, 0x75,
    0x7C, 0x2C, 0xAF, 0x71, 0xF6, 0xC3, 0xBA, 0xAE, 0x45, 0xCE, 0x5C, 0x6B,
    0x6B, 0xC6, 0xAF, 0x1D, 0x14, 0x3D, 0x9D, 0xA2, 0x6B, 0xF6, 0x5A, 0x5D,
    0x60, 0x93, 0xE8, 0x5F, 0xC3, 0x29, 0x5B, 0xFF, 0x0D, 0x9B, 0x5B, 0x08,
    0x4F, 0x12, 0x1D, 0xCB, 0x69, 0xF1, 0xA5, 0x14, 0x1B, 0x08, 0x79, 0x0B,
    0x2E, 0xE5, 0x34, 0x8E, 0xDD, 0xFA, 0xD9, 0x1D, 0xB2, 0xF4, 0x8B, 0x1B,
    0x2D, 0x79, 0x79, 0x75, 0x0C, 0xC7, 0xF2, 0x02, 0x9E, 0xCF, 0x51, 0x3C,
    0x93, 0xED, 0xA4, 0x94, 0xEC, 0xE3, 0x09, 0x1E, 0xE1, 0x7E, 0xEE, 0xE5,
    0x1E, 0xEE, 0xE3, 0x87, 0x87, 0xF2, 0x6B, 0xA5, 0xFF, 0x3F, 0x25, 0xAD,
    0x84, 0x19, 0xC9, 0x98, 0x6F, 0x76, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82

        };

            Image = new Texture2D(1, 1);
            Image.LoadImage(rawData);
        }
        GUI.DrawTexture(new Rect(0f, 0f, 90f, 90f), Image);

        if (Event.current.type == EventType.MouseDrag)
        {
            // Menu will not appear if dragging menu more than 0.3 sec.
            // This is to solve tapping sensitive issue.
            Delay += Time.deltaTime;
            if (Delay > 0.3f)
            {
                ifDragged = true;
            }
        }
        else if (Event.current.type == EventType.MouseUp)
        {
            Delay = 0;
            if (!ifDragged)
                MenuOpen = !MenuOpen;
            ifDragged = false;
        }

        //Create draggable window
        GUI.DragWindow();
    }
}
